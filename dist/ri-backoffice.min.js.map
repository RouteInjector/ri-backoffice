{"version":3,"sources":["ri-backoffice.js"],"names":["angular","makeArray","arr","isArray","provideRootElement","modules","element","unshift","$provide","value","createInjector","injectorModules","concat","injector","bootstrapApplication","angularApp","document","ready","bootstrap","lazy","app","$q","get","promises","errorCallback","noop","loadingCallback","doneCallback","resolve","promise","when","instantiate","push","this","all","then","finally","loading","callback","done","error","createCSSNodes","obj","div","createElement","i","link","href","rel","appendChild","getScripts","scripts","length","progress","internalCallback","$","ajaxSetup","async","forEach","script","getScript","module","$rootScopeProvider","digestTtl","run","$rootScope","configs","$http","resp","constant","data","deferred","defer","extensions","assets","cache","asset","src","attributes","nodeValue","type","files","j","pages","p","backoffice","getMultiScripts","path","_arr","map","scr","Deferred","apply","config","$routeProvider","customMenuProvider","authCheck","$location","loginProvider","auth","getUser","user","defaults","headers","common","Authorization","token","login","undefined","allowedUser","$inject","homePage","home","templateUrl","controller","reloadOnSearch","logout","menu","page","url","template","modelName","setCustomMenu","otherwise","redirectTo","$translateProvider","$translatePartialLoaderProvider","i18n","addPart","useLoader","urlTemplate","registerAvailableLanguageKeys","def","fallbackLanguage","useLocalStorage","uniqueLanguage","use","preferredLanguage","provider","menuElements","$get","cookieStore","factory","profile","userModel","cb","post","success","res","role","cookieOptions","end","Infinity","put","JSON","stringify","$broadcast","err","remove","parse","password","logged","extend","overrides","service","override","_method","_function","getService","Upload","modelsConfig","singlesCache","shards","prefix","$on","invalidate","console","log","getHttp","getUpload","setShard","key","model","shard","getShard","removeShard","getModels","schemas","models","getModel","schema","ajax","responseText","getModelElements","skip","limit","plural","body","elements","result","status","count","getModelSchema","getModelConfig","postDocument","response","getUrl","Error","getDocument","id","qParams","params","cfg","shardKey","putDocument","removeDocument","opts","delete","removeDocumentByMongoId","uploadImage","fieldName","index","image","upload","file","fileFormDataName","evt","parseInt","loaded","total","uploadFile","deleteImage","deleteFile","getImageUrl","imageName","getRandomQuery","getFileUrl","fileName","getSingleModel","search","query","documents","search_count","export","format","searchQuery","by","postAsForm","import","method","form","setAttribute","replace","hasOwnProperty","hiddenField","submit","getGraph","graphID","encodeURI","galleryGetByPath","galleryDeleteByPath","galleryPostByPath","getFieldFromSchema","field","retElem","split","properties","ref","denormalize","indexOf","refSchema","copy","title","lastIndexOf","prettifyTitle","substring","Object","keys","TIMEOUT_MS","timers","selectCacheService","httpCall","q","gets","$or","singleQ","doc","idKey","getObj","cbks","event","next","current","m","clearTimeout","b","posts","cached","cbk","setTimeout","$routeParams","flash","$injector","version","ngDialog","getOpenDialogs","open","className","responseError","rejection","handleError","ignoreError","redirectError","warning","errors","e","message","splice","Math","floor","errorInReferencedProperty","modelId","reject","$httpProvider","interceptors","find","innerDependsOn","each","k","v","depArr","func","indexArray","pop","join","scope","updateFunc","modelConfig","dependsValue","arrayIndex","newVal","oldVal","param","safeAccess","replaced","setField","test","root","targetField","$watchCollection","nV","oV","Array","normPath","$watch","hasAngularVariable","deAngularizeUrl","ng","matched","f","getField","getAngularVariables","exec","separator","str","toUpperCase","splitted","returnArray","parentArr","ret","rootElem","match","tmp","elem","newPath","arrInd","getAllSchemaFields","searchFields","parent","fields","processForm","submitButtons","innerForm","tabs","items","randomNumber","Date","getTime","setQuery","clearQuery","getQuery","setSortBy","sort","sortBy","addSortBy","asc","getSort","setSkip","setLimit","searchAndGroup","directive","restrict","$scope","customMenu","$window","actualSchema","isDisabled","isOpen","render","sections","Sections","add","section","clickTo","hideMenu","isSingle","openSection","actualSection","click","name","conf","parentSchema","location","isInstanceOf","Section","debug","a","levels","curLevel","scrollTo","$elm","attr","on","animate","scrollTop","offset","top","$compile","attrs","$eval","compile","html","contents","ngModel","graph","selected","punchCardData","graphs","g","groupMode","selectEnabled","barsData","values","$route","exportElements","checked","filter","x","_id","performAction","action","req","Content-Type","enableDelete","checkedValues","val","removeSelected","promptAlert","del","deletions","reload","parseMongoDate","txt","dt","parseDateTimeRange","updateYear","start","d1","d2","sec1","sec2","second","hour","year","month","day","minute","d","sec","isNaN","debugParse","Number","String","pieces","parseDateTime","trim","parseDateOrTime","dt1","dt2","parseTime","parseDate","Num","t","regex","o","toLocaleString","searches","buildPath","sc","updateSearch","elemSearch","noSearch","availableFields","fieldFromSchema","placeholder","addSearch","s","clear","allFields","displayField","singleQuery","sfield","alert","$regex","$options","$parent","getDocumentById","idSelect","forDisplay","forID","searchRes","present","some","elemsearch","select","disabled","searchEnabled","printSelectedElement","selectDisplayField","selectIdField","bind","raw","arguments","target","offsetHeight","scrollHeight","$select","children","width","css","$animate","leave","eq","$controller","m_copy","$sce","getTag","tag","prune","$anchorScroll","$timeout","$modal","dependsOn","$translate","walkThroughSchema","editOnCreate","toLowerCase","readonly","i18nTitle","instant","modified","buttonsPosition","equals","schemaHREF","hash","submitForm","isApply","$valid","validation","validationErrors","$error","yOffset","cancel","history","back","ngForm","preventDefault","modalInstance","size","basePathLength","absUrl","http","window","$modalInstance","ok","close","dismiss","$document","update","loginError","encodeURIComponent","postLoginFuncs","pretty","args","defaultItemsPerPage","removeDisabled","maxSize","create","checkedGroupIds","schemaForm","allDisplayFields","extraDisplayFields","totalElements","itemsPerPage","userItemsPerPage","defaultSearch","pageChanged","currentPage","hasShard","__t","displayCustomField","sch","property","text","trustAsHtml","toString","navbar","$$route","shardKeyText","shardValues","filtered","locked","languages","showLanguages","lang"],"mappings":"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","file":"ri-backoffice.min.js","sourcesContent":["(function (angular) {\n\n    'use strict';\n\n    //Generic   \n\n    function makeArray(arr) {\n        if(!arr){\n            return [];\n        }\n        return angular.isArray(arr) ? arr : [arr];\n    }\n\n    //Angular\n\n    function provideRootElement(modules, element) {\n        element = angular.element(element);\n        modules.unshift(['$provide',\n            function ($provide) {\n                $provide.value('$rootElement', element);\n            }]);\n    }\n\n    function createInjector(injectorModules, element) {\n        var modules = ['ng'].concat(makeArray(injectorModules));\n        if (element) {\n            provideRootElement(modules, element);\n        }\n        return angular.injector(modules);\n    }\n\n    function bootstrapApplication(angularApp) {\n        angular.element(document).ready(function () {\n            angular.bootstrap(document, [angularApp]);\n        });\n    }\n\n    angular.lazy = function (app, modules) {\n\n        var injector = createInjector(modules),\n            $q = injector.get('$q'),\n            promises = [],\n            errorCallback = angular.noop,\n            loadingCallback = angular.noop,\n            doneCallback = angular.noop;\n\n        return {\n\n            resolve: function (promise) {\n                promise = $q.when(injector.instantiate(promise));\n                promises.push(promise);\n                return this;\n            },\n\n            bootstrap: function () {\n\n                loadingCallback();\n\n                return $q.all(promises)\n                    .then(function () {\n                        bootstrapApplication(app);\n                    }, errorCallback)\n                    .finally(doneCallback);\n            },\n\n            loading: function(callback){\n                loadingCallback = callback;\n                return this;\n            },\n\n            done: function(callback){\n                doneCallback = callback;\n                return this;\n            },\n\n            error: function(callback){\n                errorCallback = callback;\n                return this;\n            }\n        };\n\n    };\n\n})(angular);\n(function () {\r\n    'use strict';\r\n    var app = angular.module('injectorApp', ['ngRoute', 'ngBiscuit', 'schemaForm', 'datePicker', 'ui.select',\r\n            'ui.ace', 'ui.codemirror', 'ui.bootstrap', 'ngFileUpload', 'ngDroplet', 'punchCard', 'nvd3ChartDirectives', 'flash', 'ngDialog', 'angular-loading-bar',\r\n            'pascalprecht.translate', 'ngCookies', 'ui.tinymce'],\r\n        ['$rootScopeProvider', function ($rootScopeProvider) {\r\n            $rootScopeProvider.digestTtl(15);\r\n        }])\r\n        .run(['$rootScope', 'configs', function ($rootScope, configs) {\r\n            $rootScope.configs = configs;\r\n        }]);\r\n\r\n    angular.lazy(\"injectorApp\")\r\n        .resolve(['$http', function ($http) {\r\n            return $http.get('/configs')\r\n                .then(function (resp) {\r\n                    app.constant('configs', resp.data);\r\n                });\r\n        }])\r\n        .resolve(['$http', '$q', function ($http, $q) {\r\n\r\n            var deferred = $q.defer();\r\n            $http.get('/admin/extensions').then(function (resp) {\r\n                app.constant('extensions', resp.data);\r\n\r\n                var extensions = resp.data;\r\n                var assets = $('asset-loader');\r\n                var scripts = [];\r\n\r\n                for (var i = 0; i < assets.length; i++) {\r\n                    var cache = [];\r\n\r\n                    var asset = assets[i];\r\n                    var src = asset.attributes.src.nodeValue;\r\n                    var type = asset.attributes.type.nodeValue;\r\n\r\n                    if (src === 'files') {\r\n                        if (extensions.files[type] && extensions.files[type].length) {\r\n                            cache = cache.concat(extensions.files[type]);\r\n                        }\r\n                    } else if (src === 'pages') {\r\n                        for (var j in extensions.pages) {\r\n                            var p = extensions.pages[j];\r\n                            if (p.backoffice) {\r\n                                if (p[type] && p[type].length) {\r\n                                    cache = cache.concat(p[type]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (type === 'css') {\r\n                        asset.appendChild(createCSSNodes(cache));\r\n                    } else if (type === 'js') {\r\n                        if (cache && cache.length) {\r\n                            scripts = scripts.concat(cache);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //$.getMultiScripts(scripts).done(function () {\r\n                //    deferred.resolve();\r\n                //});\r\n                getScripts(scripts, function () {\r\n                    deferred.resolve();\r\n                });\r\n\r\n            });\r\n\r\n            return deferred.promise;\r\n        }])\r\n        .bootstrap();\r\n\r\n    function createCSSNodes(obj) {\r\n        var div = document.createElement('div');\r\n        for (var i in obj) {\r\n            var link = document.createElement('link');\r\n            link.href = obj[i];\r\n            link.rel = 'stylesheet';\r\n            div.appendChild(link);\r\n        }\r\n        return div;\r\n    }\r\n\r\n    function getScripts(scripts, callback) {\r\n        if (!scripts || !scripts.length) {\r\n            return callback();\r\n        }\r\n        var progress = 0;\r\n        var internalCallback = function () {\r\n            if (++progress == scripts.length) {\r\n                $.ajaxSetup({async: true});\r\n                callback();\r\n            }\r\n        };\r\n\r\n        $.ajaxSetup({async: false});\r\n        scripts.forEach(function (script) {\r\n            $.getScript(script, internalCallback);\r\n        });\r\n\r\n    }\r\n\r\n    $.getMultiScripts = function (arr, path) {\r\n        var _arr = $.map(arr, function (scr) {\r\n            return $.getScript((path || \"\") + scr);\r\n        });\r\n\r\n        _arr.push($.Deferred(function (deferred) {\r\n            $(deferred.resolve);\r\n        }));\r\n\r\n        return $.when.apply($, _arr);\r\n    };\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .config(['$routeProvider', 'configs', 'extensions', 'customMenuProvider', function ($routeProvider, configs, extensions, customMenuProvider) {\r\n\r\n            var authCheck = function ($q, $rootScope, $location, $http, loginProvider, configs) {\r\n                var defer = $q.defer();\r\n                if (configs.auth) {\r\n                    loginProvider.getUser(function (user) {\r\n                        if (!user) {\r\n                            $location.path('/login');\r\n                        } else {\r\n                            $http.defaults.headers.common.Authorization = 'BEARER ' + user.token;\r\n                            $rootScope.login = undefined;\r\n                        }\r\n                        defer.resolve();\r\n                    });\r\n\r\n                } else {\r\n                    $rootScope.allowedUser = true;\r\n                    defer.resolve();\r\n                }\r\n                return defer.promise;\r\n            };\n            authCheck.$inject = ['$q', '$rootScope', '$location', '$http', 'loginProvider', 'configs'];\r\n\r\n            var homePage = 'html/models.html';\r\n            if (configs.backoffice.home) {\r\n                homePage = configs.backoffice.home;\r\n            }\r\n\r\n            $routeProvider\r\n                .when('/', {\r\n                    templateUrl: homePage,\r\n                    controller: 'MainController',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    }\r\n                })\r\n                .when('/model/:schema', {\r\n                    templateUrl: 'html/model.html',\r\n                    controller: 'ModelController',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    }\r\n                })\r\n                .when('/model/:schema/new', {\r\n                    templateUrl: 'html/create-and-update.html',\r\n                    controller: 'CreateController',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    },\r\n                    reloadOnSearch: false\r\n                })\r\n                .when('/model/:schema/update/:id', {\r\n                    templateUrl: 'html/create-and-update.html',\r\n                    controller: 'UpdateController',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    },\r\n                    reloadOnSearch: false\r\n                })\r\n                .when('/model/:schema/update/:id/:shard', {\r\n                    templateUrl: 'html/create-and-update.html',\r\n                    controller: 'UpdateController',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    },\r\n                    reloadOnSearch: false\r\n                })\r\n                .when('/model/:schema/graphs', {\r\n                    templateUrl: 'html/graphs.html',\r\n                    controller: 'GraphsController',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    }\r\n                })\r\n                .when('/login', {\r\n                    // login / password\r\n                    templateUrl: 'html/login.html',\r\n                    controller: 'LoginController',\r\n                    resolve: {\r\n                        app: ['$q', '$rootScope', '$location', 'loginProvider', function ($q, $rootScope, $location, loginProvider) {\r\n                            var defer = $q.defer();\r\n                            loginProvider.getUser(function (user) {\r\n                                if (user) {\r\n                                    $location.path('/');\r\n                                } else {\r\n                                    $rootScope.login = true;\r\n                                }\r\n                                defer.resolve();\r\n                            });\r\n                            return defer.promise;\r\n                        }]\r\n                    }\r\n                })\r\n                .when('/logout', {\r\n                    resolve: {\r\n                        app: ['$q', '$rootScope', '$location', 'loginProvider', function ($q, $rootScope, $location, loginProvider) {\r\n                            var defer = $q.defer();\r\n                            loginProvider.logout();\r\n                            $location.path('/');\r\n                            defer.resolve();\r\n                            return defer.promise;\r\n                        }]\r\n                    }\r\n                })\r\n                .when('/settings', {\r\n                    templateUrl: 'html/settings.html',\r\n                    controller: 'SettingsController'\r\n                })\r\n                .when('/gallery', {\r\n                    templateUrl: 'html/gallery.html',\r\n                    resolve: {\r\n                        app: authCheck\r\n                    }\r\n                });\r\n\r\n\r\n            if (extensions && extensions.pages) {\r\n                var menu = [];\r\n                for (var i in extensions.pages) {\r\n                    var page = extensions.pages[i];\r\n\r\n                    //Add the route for the custom page. modelName controls the sharding selector if given\r\n                    if (page.backoffice) {\r\n                        $routeProvider.when('/' + page.url, {\r\n                            templateUrl: page.template,\r\n                            controller: page.controller,\r\n                            resolve: {\r\n                                app: authCheck\r\n                            },\r\n                            modelName: page.modelName\r\n                        });\r\n                    }\r\n\r\n                    if (page.menu) {\r\n                        menu.push(page.menu);\r\n                    }\r\n                }\r\n                customMenuProvider.setCustomMenu(menu);\r\n            }\r\n\r\n            $routeProvider.otherwise({redirectTo: '/'});\r\n        }]);\r\n}());\r\n\n(function () {\n    'use strict';\n\n    angular.module('injectorApp')\n        .config(['$translateProvider', '$translatePartialLoaderProvider', 'configs', function ($translateProvider, $translatePartialLoaderProvider, configs) {\n            var i18n = configs.backoffice.i18n;\n            $translatePartialLoaderProvider.addPart('login');\n            $translatePartialLoaderProvider.addPart('model');\n            $translatePartialLoaderProvider.addPart('models');\n            $translatePartialLoaderProvider.addPart('navbar');\n            $translatePartialLoaderProvider.addPart('search');\n            $translatePartialLoaderProvider.addPart('create_update');\n            //$translatePartialLoaderProvider.addPart('flash');\n            $translatePartialLoaderProvider.addPart('version_dialog');\n\n            if (i18n && i18n.length) {\n                for (var i = 0; i < i18n.length; i++) {\n                    $translatePartialLoaderProvider.addPart(i18n[i]);\n                }\n            }\n\n            $translateProvider.useLoader('$translatePartialLoader', {\n                urlTemplate: 'i18n/{part}/{lang}.json'\n            });\n            $translateProvider.registerAvailableLanguageKeys(['en', 'es']);\n            var def = \"en\";\n            $translateProvider.fallbackLanguage('en');\n            $translateProvider.useLocalStorage();\n            if (configs.backoffice.uniqueLanguage) {\n                def = configs.backoffice.uniqueLanguage;\n                $translateProvider.use(def);\n            }\n            $translateProvider.preferredLanguage(def);\n        }]);\n\n}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .provider('customMenu', function () {\r\n        var menuElements;\r\n\r\n        this.setCustomMenu = function(value) {\r\n            menuElements = value;\r\n        };\r\n\r\n        this.$get = function(){\r\n            return menuElements;\r\n        };\r\n    });\r\n}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .provider('loginProvider', function () {\r\n\r\n            this.$get = ['$http', '$location', 'cookieStore', '$rootScope', function ($http, $location, cookieStore, $rootScope) {\r\n                var factory = {};\r\n                $http.defaults.headers.common['Client-Type'] = 'backoffice';\r\n                $http.defaults.headers.common.profile = 'back';\r\n                factory.login = function (userModel, cb) {\r\n                    $http.post('/auth/login', userModel).success(function (res) {\r\n                        var user = {};\r\n                        //user.name = userModel.login;\r\n                        user.login = userModel.login;\r\n                        user.role = res.role;\r\n                        user.token = res.token;\r\n                        var cookieOptions = {path: '/', end: Infinity};\r\n                        cookieStore.put('user', JSON.stringify(user), cookieOptions);\r\n                        $http.defaults.headers.common.Authorization = 'BEARER ' + res.token;\r\n                        $rootScope.$broadcast('login', user);\r\n                        $rootScope.allowedUser = true;\r\n                        cb(user);\r\n                    }).error(function (err) {\r\n                        var cookieOptions = {path: '/'};\r\n                        cookieStore.remove('user', cookieOptions);\r\n                        $rootScope.$broadcast('logout', undefined);\r\n                        $rootScope.allowedUser = false;\r\n                        cb(false);\r\n                    });\r\n                };\r\n\r\n                factory.getUser = function (cb) {\r\n                    var user = JSON.parse(cookieStore.get('user'));\r\n                    if (user && !$rootScope.allowedUser && user.login && (user.password || user.token)) {\r\n                        factory.login(user, function (logged) {\r\n                            if (logged) {\r\n                                angular.extend(user, logged);\r\n                                cb(logged);\r\n                            } else {\r\n                                cb(undefined);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        if (!user) {\r\n                            $rootScope.allowedUser = false;\r\n                        } else {\r\n                            //$rootScope.$broadcast('login', user);\r\n                        }\r\n\r\n                        cb(user);\r\n                    }\r\n                };\r\n\r\n                factory.logout = function () {\r\n                    var cookieOptions = {path: '/'};\r\n                    cookieStore.remove('user', cookieOptions);\r\n                    $location.path('/login');\r\n                    $rootScope.$broadcast('logout', undefined);\r\n                };\r\n\r\n                return factory;\r\n            }];\r\n        });\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .provider('models', function () {\r\n                var overrides = {};\r\n                var service = {};\r\n\r\n                this.override = function (_method, _function) {\r\n                    overrides[_method] = _function;\r\n                };\r\n\r\n                this.getService = function () {\r\n                    return service;\r\n                };\r\n\r\n\r\n                this.$get = ['$rootScope', '$http', 'Upload', 'configs', 'common', function ($rootScope, $http, Upload, configs, common) {\r\n\r\n                    var modelsConfig = {};\r\n                    var singlesCache = {};\r\n                    var shards = {};\r\n                    var prefix = '';\r\n\r\n                    $rootScope.$on('logout', function () {\r\n                        service.invalidate();\r\n                    });\r\n\r\n                    $rootScope.$on('invalidate', function () {\r\n                        console.log(\"invalidate models provider\");\r\n                        service.invalidate();\r\n                    });\r\n\r\n                    service.invalidate = function () {\r\n                        shards = {};\r\n                        singlesCache = {};\r\n                        modelsConfig = {};\r\n                    };\r\n\r\n                    service.getHttp = function () {\r\n                        return $http;\r\n                    };\r\n\r\n                    service.getUpload = function () {\r\n                        return Upload;\r\n                    };\r\n\r\n                    service.setShard = function (key, value, model) {\r\n                        var shard = {};\r\n                        shard.key = key;\r\n                        shard.value = value;\r\n                        shard.model = model;\r\n                        shards[model] = shard;\r\n                    };\r\n\r\n                    service.getShard = function (model) {\r\n                        return shards[model];\r\n                    };\r\n\r\n                    service.removeShard = function (model) {\r\n                        delete shards[model];\r\n                    };\r\n\r\n                    service.getModels = function (cb) {\r\n                        prefix = configs.app.prefix;\r\n\r\n                        //AVOID CACHE (FOR CHANGING MODELS WHEN LOGIN LOGOUT :)\r\n                        $http.get('/schemas').then(function (schemas) {\r\n                            var models = schemas.data;\r\n                            cb(models);\r\n                        });\r\n                    };\r\n\r\n                    service.getModel = function (modelName, cb) {\r\n                        if (!modelsConfig[modelName] && cb) {\r\n                            $http.get('/schema/' + modelName).then(function (schema) {\r\n                                $http.get('/schema/' + modelName + '/formconfig').then(function (config) {\r\n                                    modelsConfig[modelName] = {};\r\n                                    modelsConfig[modelName].schema = schema.data;\r\n                                    modelsConfig[modelName].config = config.data;\r\n                                    cb(modelsConfig[modelName]);\r\n                                });\r\n                            });\r\n                        } else if (!modelsConfig[modelName] && !cb) {\r\n                            var schema = JSON.parse($.ajax({\r\n                                type: \"GET\",\r\n                                url: '/schema/' + modelName,\r\n                                async: false\r\n                            }).responseText);\r\n\r\n                            var config = JSON.parse($.ajax({\r\n                                type: \"GET\",\r\n                                url: '/schema/' + modelName + '/formconfig',\r\n                                async: false\r\n                            }).responseText);\r\n\r\n                            modelsConfig[modelName] = {};\r\n                            modelsConfig[modelName].schema = schema;\r\n                            modelsConfig[modelName].config = config;\r\n\r\n                            return modelsConfig[modelName];\r\n\r\n                        } else {\r\n                            if (cb) {\r\n                                cb(modelsConfig[modelName]);\r\n                            } else {\r\n                                return modelsConfig[modelName];\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    service.getModelElements = function (modelName, skip, limit, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var plural = (data.config.plural || data.config.path + 's' || modelName + 's');\r\n                            var body = {\r\n                                skip: skip,\r\n                                limit: limit\r\n                            };\r\n                            if (service.getShard(modelName)) {\r\n                                body[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                            }\r\n                            $http.post(prefix + '/' + plural, body).success(function (elements) {\r\n                                cb(elements.result, elements.status.count);\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.getModelSchema = function (modelName, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            return cb(data.schema);\r\n                        });\r\n                    };\r\n\r\n                    service.getModelConfig = function (modelName, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            return cb(data.config);\r\n                        });\r\n                    };\r\n\r\n                    service.postDocument = function (modelName, model, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            $http.post(prefix + '/' + path, JSON.stringify(model)).then(function (response) {\r\n                                return cb(response);\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.getUrl = function (modelName, cb) {\r\n                        throw new Error(\"Not implemented\");\r\n                    };\r\n\r\n                    service.getDocument = function (modelName, id, shard, cb) {\r\n                        if (!cb) {\r\n                            cb = shard;\r\n                            shard = undefined;\r\n                        }\r\n\r\n                        if (!modelName) {\r\n                            return cb();\r\n                        }\r\n                        if (!id) {\r\n                            return cb();\r\n                        }\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            var qParams = {\r\n                                params: {\r\n                                    type: \"back\"\r\n                                }\r\n                            };\r\n\r\n                            service.getModelConfig(modelName, function (cfg) {\r\n                                if (shard && cfg.shard && cfg.shard.shardKey) {\r\n                                    qParams.params[cfg.shard.shardKey] = shard;\r\n                                } else if (service.getShard(modelName)) {\r\n                                    qParams.params[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                                }\r\n\r\n                                $http.get(prefix + '/' + path + '/' + id, qParams).success(function (document) {\r\n                                    return cb(document, null);\r\n                                }).error(function (data) {\r\n                                    return cb(null, data);\r\n                                });\r\n                            });\r\n\r\n                        });\r\n                    };\r\n\r\n                    service.putDocument = function (modelName, id, model, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            $http.put(prefix + '/' + path + '/' + id, JSON.stringify(model)).then(function (document) {\r\n                                return cb(document);\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.removeDocument = function (modelName, id, shard, cb) {\r\n                        if (!cb) {\r\n                            cb = shard;\r\n                            shard = undefined;\r\n                        }\r\n\r\n\r\n                        service.getModel(modelName, function (data) {\r\n                            var cfg = data.config;\r\n                            var path = (cfg.path || modelName);\r\n\r\n                            var opts = {params: {}};\r\n\r\n                            if (shard && cfg.shard && cfg.shard.shardKey) {\r\n                                opts.params[cfg.shard.shardKey] = shard;\r\n                            } else if (service.getShard(modelName)) {\r\n                                opts.params[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                            }\r\n                            $http.delete(prefix + '/' + path + '/' + id, opts).then(cb);\r\n                        });\r\n                    };\r\n\r\n                    service.removeDocumentByMongoId = function (modelName, id, shard, cb) {\r\n                        if (!cb) {\r\n                            cb = shard;\r\n                            shard = undefined;\r\n                        }\r\n\r\n                        service.getModel(modelName, function (data) {\r\n                            var cfg = data.config;\r\n                            var path = (data.config.path || modelName);\r\n\r\n                            var opts = {\r\n                                params: {\r\n                                    type: 'raw'\r\n                                }\r\n                            };\r\n\r\n                            if (shard && cfg.shard && cfg.shard.shardKey) {\r\n                                opts.params[cfg.shard.shardKey] = shard;\r\n                            } else if (service.getShard(modelName)) {\r\n                                opts.params[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                            }\r\n                            $http.delete(prefix + '/' + path + '/' + id, opts).then(cb);\r\n                        });\r\n                    };\r\n\r\n                    service.uploadImage = function (modelName, id, fieldName, index, image, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            Upload.upload({\r\n                                url: prefix + '/' + path + '/' + id + '/' + fieldName, //upload.php script, node.js route, or servlet url\r\n                                data: {index: index},\r\n                                file: image,\r\n                                fileFormDataName: ['image']\r\n                            }).progress(function (evt) {\r\n                                console.log('percent: ' + parseInt(100.0 * evt.loaded / evt.total));\r\n                            }).success(function (data, status, headers, config) {\r\n                                cb(data);\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.uploadFile = function (modelName, id, fieldName, index, file, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            Upload.upload({\r\n                                url: prefix + '/' + path + '/' + id + '/' + fieldName, //upload.php script, node.js route, or servlet url\r\n                                data: {index: index},\r\n                                file: file,\r\n                                fileFormDataName: ['file']\r\n                            }).progress(function (evt) {\r\n                                console.log('percent: ' + parseInt(100.0 * evt.loaded / evt.total));\r\n                            }).success(function (data, status, headers, config) {\r\n                                cb(data);\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.deleteImage = function (modelName, id, index, image, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            $http.delete(prefix + '/' + path + '/' + id + '/image/' + image).then(cb);\r\n                        });\r\n                    };\r\n\r\n\r\n                    service.deleteFile = function (modelName, id, index, file, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            $http.delete(prefix + '/' + path + '/' + id + '/file/' + file).then(cb);\r\n                        });\r\n                    };\r\n\r\n                    service.getImageUrl = function (modelName, id, imageName, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            var url = prefix + '/' + path + '/image/' + imageName + common.getRandomQuery();\r\n                            cb(url);\r\n                        });\r\n                    };\r\n\r\n                    service.getFileUrl = function (modelName, id, fileName, cb) {\r\n                        service.getModel(modelName, function (data) {\r\n                            var path = (data.config.path || modelName);\r\n                            var url = prefix + '/' + path + '/file/' + fileName + common.getRandomQuery();\r\n                            cb(url);\r\n                        });\r\n                    };\r\n\r\n                    service.getSingleModel = function (modelName, cb) {\r\n                        if (singlesCache[modelName]) {\r\n                            cb(singlesCache[modelName]);\r\n                        }\r\n                        else {\r\n                            service.search(modelName, {skip: 0, limit: 1}, function (elements, count) {\r\n                                if (count > 0) {\r\n                                    //We only cach if we found THE single document\r\n                                    singlesCache[modelName] = elements[0];\r\n                                    cb(elements[0]);\r\n                                } else {\r\n                                    //Do nothing from now\r\n                                    cb(null);\r\n                                }\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    service.search = function (modelName, query, shard, cb) {\r\n                        if (!cb) {\r\n                            cb = shard;\r\n                            shard = undefined;\r\n                        }\r\n\r\n                        service.getModelConfig(modelName, function (config) {\r\n                            var path = (config.plural || modelName);\r\n                            if (shard && config.shard && config.shard.shardKey) {\r\n                                query[config.shard.shardKey] = shard;\r\n                            } else if (service.getShard(modelName)) {\r\n                                query[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                            }\r\n                            $http.post(prefix + '/' + path, JSON.stringify(query)).success(function (documents) {\r\n                                if (documents.status.search_count !== undefined) {\r\n                                    cb(documents.result, documents.status.search_count);\r\n                                }\r\n                                else {\r\n                                    cb(documents.result, documents.status.count);\r\n                                }\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.export = function (modelName, format, searchQuery, cb) {\r\n                        service.getModelConfig(modelName, function (config) {\r\n                            var query = {};\r\n                            var path = (config.plural || modelName);\r\n                            if (service.getShard(modelName)) {\r\n                                query[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                            }\r\n\r\n                            query.format = format;\r\n                            query.by = config.id;\r\n                            query.query = searchQuery || {};\r\n\r\n                            service.postAsForm(prefix + '/' + path + '/export', query);\r\n                            cb();\r\n                        });\r\n                    };\r\n\r\n                    service.import = function (modelName, format, file, query, cb) {\r\n                        service.getModelConfig(modelName, function (config) {\r\n                            var path = (config.plural || modelName);\r\n                            if (service.getShard(modelName)) {\r\n                                query[service.getShard(modelName).key] = service.getShard(modelName).value;\r\n                            }\r\n\r\n                            query.format = format;\r\n\r\n                            service.postAsForm(prefix + '/' + path + '/export', query, \"POST\", file);\r\n                            cb();\r\n                        });\r\n                    };\r\n\r\n                    service.postAsForm = function (path, params, method, file) {\r\n                        method = method || \"post\"; // Set method to post by default if not specified.\r\n\r\n                        if (file) {\r\n                            console.log(\"FILE\", file);\r\n                        }\r\n\r\n                        console.log(\"POST AS FORM\", path, params, method, file);\r\n\r\n                        // The rest of this code assumes you are not using a library.\r\n                        // It can be made less wordy if you use one.\r\n                        var form = document.createElement(\"form\");\r\n                        form.setAttribute(\"method\", method);\r\n                        form.setAttribute(\"action\", path + \"?token=\" + $http.defaults.headers.common.Authorization.replace(\"BEARER \", \"\"));\r\n\r\n                        for (var key in params) {\r\n\r\n                            if (params.hasOwnProperty(key)) {\r\n                                var hiddenField = document.createElement(\"input\");\r\n                                hiddenField.setAttribute(\"type\", \"hidden\");\r\n                                hiddenField.setAttribute(\"name\", key);\r\n                                if (typeof(params[key]) == \"object\") {\r\n                                    hiddenField.setAttribute(\"value\", JSON.stringify(params[key]));\r\n                                } else {\r\n                                    hiddenField.setAttribute(\"value\", params[key]);\r\n                                }\r\n\r\n                                form.appendChild(hiddenField);\r\n                            }\r\n                        }\r\n\r\n                        /*fieldAttr(params);\r\n\r\n                         function fieldAttr(obj, parent) {\r\n\r\n                         for (var key in obj) {\r\n                         var full = parent ? parent + \".\" + key : key;\r\n                         if(typeof(obj[key]) == \"object\"){\r\n                         fieldAttr(obj[key], full);\r\n                         }\r\n                         if (obj.hasOwnProperty(key)) {\r\n                         var hiddenField = document.createElement(\"input\");\r\n                         hiddenField.setAttribute(\"type\", \"hidden\");\r\n                         hiddenField.setAttribute(\"name\", full);\r\n                         hiddenField.setAttribute(\"value\", obj[full]);\r\n\r\n                         form.appendChild(hiddenField);\r\n                         }\r\n                         }\r\n                         }*/\r\n\r\n                        form.submit();\r\n                    };\r\n\r\n                    service.getGraph = function (modelName, graphID, cb) {\r\n                        service.getModelConfig(modelName, function (config) {\r\n                            var path = (config.path || modelName);\r\n                            $http.post(prefix + '/' + path + '/graphs/' + encodeURI(graphID)).success(function (data) {\r\n                                cb(data);\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    service.galleryGetByPath = function (path, cb) {\r\n                        $http.get(prefix + '/gallery/' + path).success(function (data) {\r\n                            cb(data);\r\n                        });\r\n                    };\r\n\r\n                    service.galleryDeleteByPath = function (path, cb) {\r\n                        $http.delete(prefix + '/gallery/' + path).success(function (data) {\r\n                            cb(data);\r\n                        });\r\n                    };\r\n\r\n                    service.galleryPostByPath = function (path, cb) {\r\n                        Upload.upload({\r\n                            url: prefix + '/gallery/' + path,\r\n                            file: \"\",\r\n                            fileFormDataName: ['file[]']\r\n                        }).success(function (data, status, headers, config) {\r\n                            cb(data);\r\n                        });\r\n                    };\r\n\r\n                    /**\r\n                     * Obtains point separated field {{field}} from schema {{schema}}\r\n                     * @param field\r\n                     * @param schema\r\n                     * @returns {*}\r\n                     */\r\n                    service.getFieldFromSchema = function (field, schema) {\r\n                        if (schema[field]) {\r\n                            return schema[field];\r\n                        } else {\r\n                            var elements = field.split('.');\r\n                            var retElem;\r\n                            for (var i in elements) {\r\n                                if (retElem && retElem.properties) {\r\n                                    retElem = retElem.properties[elements[i]];\r\n                                } else if (retElem && retElem.ref && retElem.denormalize && retElem.denormalize.indexOf(elements[i]) > -1) {\r\n                                    //Todo: Call api and resolve the model field\r\n                                    var refSchema = service.getModel(retElem.ref);\r\n                                    retElem = angular.copy(service.getFieldFromSchema(elements[i], refSchema.schema));\r\n                                    if (retElem && retElem.title) {\r\n                                        var index = field.lastIndexOf(\".\");\r\n                                        retElem.title = common.prettifyTitle(field.substring(0, index) + '.' + retElem.title);\r\n                                        //retElem.title = \"A \"+retElem.title;\r\n                                    }\r\n                                } else {\r\n                                    retElem = schema[elements[i]];\r\n                                }\r\n                            }\r\n\r\n                            return retElem;\r\n                        }\r\n                    };\r\n\r\n                    angular.forEach(Object.keys(overrides), function (key) {\r\n                        service[key] = overrides[key];\r\n                    });\r\n\r\n                    return service;\r\n                }];\r\n            }\r\n        );\r\n}());\n(function () {\n    'use strict';\n    angular.module('injectorApp')\n        .factory('selectCacheService', function () {\n            return {\n                TIMEOUT_MS: 750,\n                timers: {},\n                cache: {}\n            };\n        })\n        .provider('selectCache', function () {\n            this.$get = ['$rootScope', 'models', 'selectCacheService', function ($rootScope, models, selectCacheService) {\n                var provider = {};\n\n                $rootScope.$on('$routeChangeStart', function (event, next, current) {\n                    if (next != current) {\n                        selectCacheService.cache = {};\n                        angular.forEach(Object.keys(selectCacheService.timers), function (m) {\n                            clearTimeout(selectCacheService.timers[m]);\n                            delete selectCacheService.timers[m];\n                        });\n                        //console.log(\"[SelectCache] CACHE CLEARED\");\n                    }\n                });\n\n                provider.search = function (modelName, b, shard, cb) {\n                    var body = JSON.stringify(b);\n                    //console.log(\"[SelectCache] POST FROM SELECT\", modelName, b);\n\n                    if (!selectCacheService.cache[modelName]) {\n                        selectCacheService.cache[modelName] = {};\n                    }\n\n                    if (!selectCacheService.cache[modelName].posts) {\n                        selectCacheService.cache[modelName].posts = {};\n                    }\n\n                    var cached = selectCacheService.cache[modelName].posts[body];\n                    if (!cached) {//A new query\n                        selectCacheService.cache[modelName].posts[body] = {}; //CALLBACKS\n                        selectCacheService.cache[modelName].posts[body].cbks = [cb]; //CALLBACKS\n\n                        //console.log(\"[SelectCache] >>>>>>>>>>>>>> HTTP POST\", modelName, b);\n                        models.search(modelName, b, shard, function (response, count) {\n                            //console.log(\"[SelectCache] POST SELECT RESULT\", modelName, b, {\n                            //    count: count,\n                            //    response: response\n                            //});\n                            selectCacheService.cache[modelName].posts[body].res = {\n                                response: response,\n                                count: count\n                            };\n                            angular.forEach(selectCacheService.cache[modelName].posts[body].cbks, function (cbk) {\n                                cbk(response, count);\n                            });\n                            selectCacheService.cache[modelName].posts[body].cbks = [];\n                        });\n\n                    } else if (!cached.res && cached.cbks) {//Not finished query\n                        cached.cbks.push(cb);\n                        //console.log(\"[SelectCache] ADDED CB FOR POST\", modelName, b);\n                    } else { //Finished query\n                        cached.cbks.push(cb);\n                        angular.forEach(cached.cbks, function (cbk) {\n                            //console.log(\"[SelectCache] CACHED POST\", modelName, b, {\n                            //    count: cached.res.count,\n                            //    response: cached.res.response\n                            //});\n                            cbk(cached.res.response, cached.res.count);\n                        });\n                        cached.cbks = [];\n                    }\n                };\n\n                provider.getDocument = function (modelName, id, shard, cb) {\n                    //console.log(\"[SelectCache] GET FROM SELECT\", modelName, id);\n\n                    if (!selectCacheService.cache[modelName]) {\n                        selectCacheService.cache[modelName] = {};\n                    }\n\n                    if (!selectCacheService.cache[modelName].gets) {\n                        selectCacheService.cache[modelName].gets = {};\n                    }\n\n                    if (id) {\n                        if (!selectCacheService.cache[modelName].gets[id]) {\n                            selectCacheService.cache[modelName].gets[id] = {};\n                        }\n\n                        if (!selectCacheService.cache[modelName].gets[id].cbks) {\n                            selectCacheService.cache[modelName].gets[id].cbks = [];\n                        }\n\n                        if (selectCacheService.cache[modelName].gets[id].result) {\n                            //console.log(\"[SelectCache] CACHED VALUE\", modelName, id, selectCacheService.cache[modelName].gets[id].result);\n                            cb(selectCacheService.cache[modelName].gets[id].result);\n                        } else if (selectCacheService.cache[modelName].gets[id].cbks.indexOf(cb) == -1) {\n                            selectCacheService.cache[modelName].gets[id].cbks.push(cb);\n                            //console.log(\"[SelectCache] ADDED CB FOR GET\", modelName, id);\n\n                            if (selectCacheService.timers[modelName]) {\n                                clearTimeout(selectCacheService.timers[modelName]);\n                            }\n\n                            //TODO: Possible bug, ASYNC MODELNAME && SHARD !!!!!\n                            selectCacheService.timers[modelName] = setTimeout(function(){\n                                httpCall(modelName, shard);\n                            }, selectCacheService.TIMEOUT_MS);\n                        }\n                    } else{\n                        //WE HAVE TO RELEASE THE GETDOCUMENT CALLBACK!!!\n                        cb();\n                    }\n                };\n\n                function httpCall(model, shard) {\n                    models.getModelConfig(model, function (cfg) {\n                        var q = {};\n                        if (shard && cfg.shard.shardKey) {\n                            q[cfg.shard.shardKey] = shard;\n                        }\n\n                        var keys = Object.keys(selectCacheService.cache[model].gets);\n                        if (keys.length == 1) {\n                            q[cfg.id] = keys[0];\n                        } else {\n                            q.$or = [];\n                            angular.forEach(keys, function (id) {\n                                if (!selectCacheService.cache[model].gets[id].result) {\n                                    var singleQ = {};\n                                    singleQ[cfg.id] = id;\n                                    q.$or.push(singleQ);\n                                }\n                            });\n                        }\n\n                        //console.log(\"[SelectCache] >>>>>>>>>>>>>> HTTP GETS\", model, q);\n                        models.search(model, {query: q}, function (result, count) {\n                            //console.log(\"[SelectCache] GET SELECT RESULT\", model, q, result);\n                            angular.forEach(result, function (doc) {\n                                var id = doc[cfg.id];\n                                selectCacheService.cache[model].gets[id].result = doc;\n                            });\n\n                            angular.forEach(Object.keys(selectCacheService.cache[model].gets), function (idKey) {\n                                var getObj = selectCacheService.cache[model].gets[idKey];\n                                if (getObj.cbks) {\n                                    angular.forEach(getObj.cbks, function (cb) {\n                                        cb(getObj.result);\n                                    });\n                                    delete getObj.cbks;\n                                }\n                            });\n                        });\n                    });\n                }\n\n                return provider;\n            }];\n        });\n}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .factory('httpResponseInterceptor', ['$q', '$location', '$routeParams', 'flash', '$injector', 'configs', function ($q, $location, $routeParams, flash, $injector, configs) {\r\n\r\n            return {\r\n                response: function (response) {\r\n                    //console.log(response);\r\n                    if (response.headers(\"routeinjector\") && (response.headers(\"routeinjector\") !== configs.backoffice.version)) {\r\n                        var ngDialog = $injector.get(\"ngDialog\");\r\n                        if (ngDialog.getOpenDialogs().length === 0) {\r\n                            ngDialog.open({\r\n                                template: \"dialogVersionMismatch\",\r\n                                className: 'ngdialog-theme-default ngdialog-theme-custom'\r\n                            });\r\n                        }\r\n                    }\r\n                    if (response.status === 401) {\r\n                        console.log(\"Response 401\");\r\n                    } else if (response.status === 201) {\r\n                        flash.success(\"Done\", \"Document saved successfully\");\r\n                    }\r\n                    return response || $q.when(response);\r\n                },\r\n                responseError: function (rejection) {\r\n\r\n                    var models = $injector.get(\"models\");\r\n\r\n                    var modelName = $routeParams.schema;\r\n                    var modelId = $routeParams.id;\r\n\r\n                    var errorInReferencedProperty;\r\n                    var prefix = configs.app.prefix;\r\n\r\n                    if (modelName) {\r\n                        models.getModelConfig(modelName, function (model) {\r\n                            var path = \"/\" + model.path + \"/\" + modelId;\r\n                            if (prefix) {\r\n                                path = \"/\" + path;\r\n                            }\r\n\r\n                            errorInReferencedProperty = path !== rejection.config.url;\r\n                            handleError(errorInReferencedProperty);\r\n\r\n                        });\r\n                    } else {\r\n                        handleError(true);\r\n                    }\r\n\r\n                    function handleError(ignoreError) {\r\n                        function redirectError() {\r\n                            if ($location.url() != \"/login\" && $location.url() != \"/logout\" && $location.url() != \"/\") {\r\n                                if ($routeParams.schema) {\r\n                                    $location.path('/model/' + $routeParams.schema);\r\n                                } else {\r\n                                    $location.path('/');\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (rejection.status === 401) {\r\n                            console.log(\"Response Error 401\", rejection);\r\n                            redirectError();\r\n\r\n                            if ($location.url() != \"/login\") {\r\n                                flash.error(\"Unauthorized\", JSON.stringify(rejection.data));\r\n                            }\r\n                        } else if (rejection.status === 500) {\r\n                            flash.error(\"Internal server error\", JSON.stringify(rejection.data));\r\n                        } else if (rejection.status === 400) {  //Client error\r\n                            flash.error(\"Bad Request\", JSON.stringify(rejection.data));\r\n                        } else if (rejection.status === 404 && !ignoreError) {\r\n                            redirectError();\r\n                            flash.error(\"Not Found\", JSON.stringify(rejection.data));\r\n                        } else if (rejection.status === 404 && ignoreError) {\r\n                            flash.warning(\"Property Not Found\", JSON.stringify(rejection.data));\r\n                        } else if (rejection.status === 403) {\r\n                            if (rejection.data && rejection.data.errors) {\r\n                                var errors = [];\r\n                                angular.forEach(Object.keys(rejection.data.errors), function (e) {\r\n                                    errors.push(\"<strong>\" + e + \"</strong> validation failed. Caused by: \" + rejection.data.errors[e].message);\r\n                                });\r\n                                errors.splice(0, 0, \"Validation Error \" + rejection.status + \"\");\r\n                                flash.error.apply(this, errors);\r\n                            } else {\r\n                                flash.error(\"Validation Error \" + rejection.status + \"\", JSON.stringify(rejection.data));\r\n                            }\r\n                        } else if (Math.floor(rejection.status / 100) == 4 || Math.floor(rejection.status / 100) == 5) {\r\n                            redirectError();\r\n                            flash.error(\"Error \" + rejection.status, JSON.stringify(rejection.data));\r\n                        }\r\n                    }\r\n\r\n                    return $q.reject(rejection);\r\n                }\r\n            };\r\n        }\r\n        ])\r\n        .config(['$httpProvider', function ($httpProvider) {\r\n            //Http Interceptor to check failures\r\n            $httpProvider.interceptors.push('httpResponseInterceptor');\r\n        }]);\r\n}());\r\n\n//(function () {\r\n//    'use strict';\r\n//    angular.module('injectorApp')\r\n//        .factory('flash', function ($rootScope) {\r\n//            var queue = [];\r\n//            var currentMessage = \"\";\r\n//\r\n//            $rootScope.$on(\"$routeChangeSuccess\", function () {\r\n//                currentMessage = queue.shift() || \"\";\r\n//            });\r\n//\r\n//            return {\r\n//                setMessage: function (message) {\r\n//                    queue.push(message);\r\n//                },\r\n//                getMessage: function () {\r\n//                    return currentMessage;\r\n//                }\r\n//            };\r\n//        });\r\n//}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .factory('dependsOn', ['$http', 'configs', 'common', 'models', function ($http, configs, common, models) {\r\n        var factory = {};\r\n\r\n        factory.find = function (obj) {\r\n            var depArr = [];\r\n            function innerDependsOn(obj, index) {\r\n                if (typeof obj == \"object\") {\r\n                    $.each(obj, function (k, v) {\r\n                        // k is either an array index or object key\r\n                        if (k == 'dependsOn') {\r\n                            depArr.push({\r\n                                path: index,\r\n                                field: v.field,\r\n                                params: v.params,\r\n                                func: v.func\r\n                            });\r\n                        }\r\n                        if (!index) {\r\n                            index = k;\r\n                        }\r\n                        else {\r\n                            index = index + '.' + k;\r\n                        }\r\n                        innerDependsOn(v, index);\r\n                        var indexArray = index.split('.');\r\n                        indexArray.pop();\r\n                        index = indexArray.join('.');\r\n                    });\r\n                }\r\n                else {\r\n                    var indexArray = index.split('.');\r\n                    indexArray.pop();\r\n                    index = indexArray.join('.');\r\n                }\r\n            }\r\n\r\n            innerDependsOn(obj);\r\n            return depArr;\r\n        };\r\n\r\n        factory.apply = function (scope, modelName, doc) {\r\n            function updateFunc(modelConfig, dependsValue, arrayIndex) {\r\n                return function(newVal, oldVal) {\r\n                    if (newVal) {\r\n                        //configs.getRoutesConfig(function (c) {\r\n                            var url = configs.app.prefix + '/_' + modelConfig.path + '/' + dependsValue.func ;\r\n                            var body = {};\r\n                            angular.forEach(dependsValue.params, function (param) {\r\n                                body[param]= safeAccess(doc, param);\r\n                            });\r\n\r\n                            /*if(arrayIndex !== undefined){ //TODO: I'm not sure...\r\n                                url += '/' + arrayIndex;\r\n                            }*/\r\n\r\n                            $http.post(url, body).success(function (data) {\r\n                                var replaced = dependsValue.path.replace(/properties\\./g, '');\r\n\r\n                                if(arrayIndex !== undefined){\r\n                                    replaced = replaced.replace(/\\.items/g, '[' + arrayIndex + ']');\r\n                                }\r\n\r\n                                common.setField(replaced, doc, data);\r\n                            });\r\n                        //});\r\n                    }\r\n                };\r\n            }\r\n\r\n\r\n            models.getModel(modelName, function (m) {\r\n                var depArr = factory.find(m.schema);\r\n                $.each(depArr, function (k, v) {\r\n                    if ((/(this\\.)/).test(v.field)) {\r\n                        var path = v.path.replace(/properties\\./g, '');\r\n                        var root = path.split('.')[0];\r\n                        var targetField = v.field.replace(/(this\\.)/, \"\");\r\n\r\n                        if ((/(items)/).test(path)) { //Is an array\r\n                            scope.$watchCollection(\"model.\" + root, function (nV, oV) {\r\n                                if (nV && nV instanceof Array) {\r\n                                    for (var i in nV) {\r\n                                        var normPath = root + \"[\" + i + \"].\" + targetField;\r\n                                        for (var p in v.params) {\r\n                                            v.params[p] = normPath;\r\n                                        }\r\n                                        scope.$watch(\"model.\" + normPath, updateFunc(m.config, angular.copy(v), angular.copy(i)));\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else{ // Is an object\r\n                            var normPath = root + \".\" + targetField;\r\n                            scope.$watch('model' + '.' + normPath, updateFunc(m.config, angular.copy(v)));\r\n                        }\r\n                    } else {\r\n                        scope.$watch('model' + '.' + v.field, updateFunc(m.config, v));\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        return factory;\r\n    }]);\r\n}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .factory('common', ['$rootScope', function ($rootScope) {\r\n\r\n            var factory = {};\r\n\r\n            factory.hasAngularVariable = function (url) {\r\n                return (/\\{{(.*)\\}}/).test(url);\r\n            };\r\n\r\n            factory.deAngularizeUrl = function (doc, url) {\r\n                return url.replace(/\\{{(.*)\\}}/g, function (ng, matched) {\r\n\r\n                    var f = factory.getField(matched, doc);\r\n                    return f;\r\n                });\r\n            };\r\n\r\n            factory.getAngularVariables = function (url) {\r\n                return /\\{{(.*)\\}}/.exec(url)[1];\r\n            };\r\n\r\n            factory.prettifyTitle = function (title, separator) {\r\n                title = title || \"\";\r\n                separator = separator || \".\";\r\n                return title\r\n                    // look for \".\"  user.age will be User -> Age\r\n                    //TODO: Look for separator instead of \".\"\r\n                    .replace(/(\\.([a-z]|[A-Z]))/g, function (str) {\r\n                        return \" <i class='fa fa-angle-right'></i> \" + str.replace(\".\", \"\").toUpperCase();\r\n                    })\r\n                    // insert a space before all caps\r\n                    .replace(/([A-Z])/g, ' $1')\r\n                    // uppercase the first character\r\n                    .replace(/^./, function (str) {\r\n                        return str.toUpperCase();\r\n                    });\r\n            };\r\n\r\n            /**\r\n             * Gets field value in point separated {{field}} from the model {{element}}. Also accepts [] notation.\r\n             * @param field\r\n             * @param element\r\n             * @returns {*}\r\n             */\r\n            factory.getField = function (field, element) {\r\n                if (element) {\r\n                    var splitted = field.split('.');\r\n                    if (splitted instanceof Array && splitted.length > 0) {\r\n                        var ret = element;\r\n                        var returnArray;\r\n                        var parentArr;\r\n                        for (var path in splitted) {\r\n\r\n                            //Method for extract array[].a fields or array[0].a fields.\r\n                            if ((/(\\[\\d*\\])/).test(splitted[path])) {\r\n                                //Is an array !!!\r\n                                var rootElem = splitted[path].replace(/(\\[\\d*\\])/, \"\");\r\n                                var index = splitted[path].match(/(\\d*)(?=\\])/)[0];\r\n\r\n                                if (ret) {\r\n                                    if (index) {\r\n                                        ret = ret[rootElem][index];\r\n                                    }\r\n                                    else {\r\n                                        parentArr = rootElem;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (parentArr) {\r\n                                    var tmp = ret;\r\n                                    returnArray = [];\r\n                                    for (var elem in tmp[parentArr]) {\r\n                                        returnArray.push(tmp[parentArr][elem][splitted[path]]);\r\n                                    }\r\n                                } else {\r\n                                    if (ret) {\r\n                                        ret = ret[splitted[path]];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (returnArray) {\r\n                            return returnArray;\r\n                        }\r\n                        return ret;\r\n                    } else {\r\n                        return element[field];\r\n                    }\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Sets value {{value}} to model {{model}} in the point separated field {{field}}\r\n             * @param field\r\n             * @param model\r\n             * @param value\r\n             */\r\n            factory.setField = function (field, model, value) {\r\n                if (model) {\r\n                    var splitted = field.split('.');\r\n                    if (splitted instanceof Array && splitted.length > 0) {\r\n                        var ref = model;\r\n                        for (var i = 0; i < splitted.length; i++) {\r\n                            var path = splitted[i];\r\n                            if ((/(\\[\\d*\\])/).test(path)) {\r\n                                var rootElem = path.replace(/(\\[\\d*\\])/, \"\");\r\n                                var index = path.match(/(\\d*)(?=\\])/)[0];\r\n\r\n                                var newPath;\r\n                                if (index === undefined) {\r\n                                    for (var arrInd in ref[rootElem]) {\r\n                                        newPath = splitted[i + 1];\r\n                                        factory.setField(newPath, ref[rootElem][arrInd], value);\r\n                                    }\r\n                                } else {\r\n                                    newPath = splitted[i + 1];\r\n                                    factory.setField(newPath, ref[rootElem][index], value);\r\n                                }\r\n                            } else {\r\n                                if (i < splitted.length - 1) {\r\n                                    if (!ref[path]) {\r\n                                        ref[path] = {};\r\n                                    }\r\n                                    ref = ref[path];\r\n                                } else {\r\n                                    ref[path] = value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Obtains all the keys of an schema (using {{separator}} as nested level indicator)\r\n             * @param schema\r\n             * @param separator\r\n             * @returns {Array}\r\n             */\r\n            factory.getAllSchemaFields = function (schema, separator) {\r\n                separator = separator || \".\";\r\n                var fields = [];\r\n\r\n                function searchFields(obj, parent) {\r\n                    var keys = Object.keys(obj);\r\n                    angular.forEach(keys, function (k) {\r\n                        if (obj[k].properties) {\r\n                            searchFields(obj[k].properties, parent ? (parent + separator + k) : k);\r\n                        } else if (obj[k].denormalize) {\r\n                            angular.forEach(obj[k].denormalize, function (field) {\r\n                                fields.push((parent ? (parent + separator) : \"\") + k + separator + field);\r\n                            });\r\n                        } else {\r\n                            fields.push(parent ? (parent + separator + k) : k);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                searchFields(schema);\r\n\r\n                return fields;\r\n            };\r\n\r\n            /**\r\n             * Process the form and returns the schema form for the schemaForm module\r\n             * @param form\r\n             * @param submitButtons\r\n             * @returns {*|string[]}\r\n             */\r\n            factory.processForm = function (form, submitButtons) {\r\n                var showSubmitButtons = (submitButtons === undefined || submitButtons);\r\n                var innerForm;\r\n\r\n                if (form && form.tabs) {\r\n                    innerForm = innerForm || [];\r\n                    innerForm.push({\r\n                        \"type\": \"tabs\",\r\n                        \"tabs\": form.tabs\r\n                    });\r\n                } else if (form && form.items) {\r\n                    innerForm = form.items;\r\n                }\r\n\r\n                innerForm = innerForm || [\"*\"];\r\n\r\n                //TODO: Keep this comment out to wait if someone complains of missing feature\r\n                //if (showSubmitButtons) {\r\n                //    var hasSubmitButton = false;\r\n                //    angular.forEach(innerForm, function (item) {\r\n                //        if (item.type == \"submit\") {\r\n                //            hasSubmitButton = true;\r\n                //        }\r\n                //    });\r\n                //\r\n                //    if (!hasSubmitButton) {\r\n                //        innerForm.push({\r\n                //            type: \"submit\",\r\n                //            title: \"Save\"\r\n                //        });\r\n                //    }\r\n                //\r\n                //}\r\n\r\n                return innerForm;\r\n            };\r\n\r\n            factory.randomNumber = function () {\r\n                return (new Date()).getTime();\r\n            };\r\n\r\n            factory.getRandomQuery = function () {\r\n                return '?r=' + factory.randomNumber();\r\n            };\r\n\r\n            return factory;\r\n        }]);\r\n}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .factory('search', ['$rootScope', 'models', function ($rootScope, models) {\r\n            var query = {};\r\n\r\n            return {\r\n                setQuery: function (q) {\r\n                    query.query = q;\r\n                },\r\n                clearQuery: function() {\r\n                    this.setQuery({});\r\n                },\r\n                getQuery: function () {\r\n                    return query.query;\r\n                },\r\n                setSortBy: function (sort) {\r\n                    query.sortBy = sort;\r\n                },\r\n                addSortBy: function(field, asc) {\r\n                    query.sortBy = {};\r\n                    query.sortBy[field] = asc ? 1 : -1;\r\n                },\r\n                getSort: function(field) {\r\n                    if(query.sortBy) {\r\n                        return query.sortBy[field];\r\n                    } else {\r\n                        return undefined;\r\n                    }\r\n                },\r\n                setSkip: function(skip){\r\n                    query.skip = skip;\r\n                },\r\n                setLimit: function(limit){\r\n                    query.limit = limit;\r\n                },\r\n                search: function (schema,  callback) {\r\n                    models.search(schema, query, function (elements, count) {\r\n                        callback(elements, count, null);\r\n                    });\r\n                },\r\n                searchAndGroup: function(schema, callback) {\r\n                    //TODO: Montar la query con grupos\r\n                    //TODO: Volver al modelController y añadir una columna de grupo (p.ej. count)\r\n                    //TODO: Pintar !!\r\n                }\r\n            };\r\n\r\n        }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .directive('sideMenu', function () {\r\n            return {\r\n                restrict: 'E',\r\n                scope: false,\r\n                templateUrl: 'html/side-menu.html',\r\n                controller: ['$scope', '$routeParams', '$location', 'common', 'models', 'customMenu', '$window', '$rootScope', function ($scope, $routeParams, $location, common, models, customMenu, $window, $rootScope) {\r\n                    $scope.common = common;\r\n\r\n                    $scope.$on(\"$routeChangeStart\", function (event, next, current) {\r\n                        if (next.params.schema) {\r\n                            $scope.actualSchema = next.params.schema;\r\n                        }\r\n                    });\r\n                    $scope.isDisabled = false;\r\n                    $scope.isOpen = false;\r\n\r\n                    var render = function () {\r\n                        $scope.sections = new Sections();\r\n\r\n                        angular.forEach(customMenu, function (elem) {\r\n                            $scope.sections.add(elem.section, elem.title, elem);\r\n                        });\r\n\r\n                        $scope.sections.add(\"Gallery\", \"Gallery\", {\r\n                            clickTo: \"gallery\"\r\n                        });\r\n\r\n                        models.getModels(function (m) {\r\n                            angular.forEach(m, function (schema) {\r\n                                models.getModelConfig(schema, function (config) {\r\n                                    if (!config.hideMenu) {\r\n                                        if (config.isSingle) {\r\n                                            models.getSingleModel(schema, function (doc) {\r\n                                                if (doc) {\r\n                                                    config.clickTo = \"model/\" + schema + \"/update/\" + doc[config.id];\r\n                                                } else {\r\n                                                    config.clickTo = \"model/\" + schema + \"/new\";\r\n                                                }\r\n                                            });\r\n                                        } else {\r\n                                            config.clickTo = \"model/\" + schema;\r\n                                        }\r\n                                        $scope.sections.add(config.section, schema, config);\r\n                                    }\r\n                                });\r\n                            });\r\n                        });\r\n                    };\r\n\r\n\r\n                    render();\r\n                    $rootScope.$on('invalidate', function () {\r\n                        render();\r\n                    });\r\n\r\n                    $scope.openSection = function (section) {\r\n                        $scope.actualSection = section;\r\n                    };\r\n\r\n                    $scope.click = function (section, name, conf) {\r\n                        $scope.parentSchema = section;\r\n                        $scope.actualSchema = name;\r\n                        $scope.actualSection = section;\r\n                        if (conf.clickTo) {\r\n                            $location.path(conf.clickTo);\r\n                        } else if (conf.url) {\r\n                            $window.location.href = conf.url;\r\n                        }\r\n                    };\r\n\r\n                    $scope.isInstanceOf = function (obj) {\r\n                        return (obj instanceof Section);\r\n                    };\r\n\r\n                    $scope.debug = function (a, b) {\r\n                        console.log(a, b);\r\n                    };\r\n                }]\r\n            };\r\n        });\r\n}());\r\n\r\nvar Section = function () {\r\n};\r\nvar Sections = function () {\r\n\r\n\r\n    var menu = {};\r\n\r\n    this.get = function () {\r\n        return menu;\r\n    };\r\n\r\n\r\n    this.add = function (key, schema, config) {\r\n        /**\r\n         * Dot notation loop: http://stackoverflow.com/a/10253459/607354\r\n         */\r\n        var levels = key.split(\".\");\r\n        var curLevel = menu;\r\n        var i = 0;\r\n        while (i < levels.length - 1) {\r\n            if (typeof curLevel[levels[i]] === 'undefined') {\r\n                curLevel[levels[i]] = new Section();\r\n            }\r\n\r\n            curLevel = curLevel[levels[i]];\r\n            i++;\r\n        }\r\n\r\n        curLevel[levels[levels.length - 1]] = curLevel[levels[levels.length - 1]] || new Section();\r\n        curLevel[levels[levels.length - 1]][schema] = config;\r\n    };\r\n};\r\n\n(function () {\n    'use strict';\n    angular.module('injectorApp')\n        .directive('scrollToItem', function () {\n            return {\n                restrict: 'A',\n                scope: {\n                    scrollTo: \"@\"\n                },\n                link: function (scope, $elm, attr) {\n\n                    $elm.on('click', function () {\n                        $('html,body').animate({scrollTop: $(scope.scrollTo).offset().top}, \"slow\");\n                    });\n                }\n            };\n        });\n}());\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .directive('compile', ['$compile', function($compile) {\r\n        // directive factory creates a link function\r\n        return function(scope, element, attrs) {\r\n            scope.$watch(\r\n                function(scope) {\r\n                    // watch the 'compile' expression for changes\r\n                    return scope.$eval(attrs.compile);\r\n                },\r\n                function(value) {\r\n                    // when the 'compile' expression changes\r\n                    // assign it into the current DOM\r\n                    element.html(value);\r\n\r\n                    // compile the new DOM and link it to the current\r\n                    // scope.\r\n                    // NOTE: we only compile .childNodes so that\r\n                    // we don't get into infinite loop compiling ourselves\r\n                    $compile(element.contents())(scope);\r\n                }\r\n            );\r\n        };\r\n    }]);\r\n}());\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp').directive('injectorPunchcard', ['$routeParams', 'models', function ($routeParams, models) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: true,\r\n            templateUrl: 'js/directives/injector-punchcard/injector-punchcard.html',\r\n            link: function (scope, element, attrs, ngModel) {\r\n                var modelName = $routeParams.schema;\r\n                models.getGraph(modelName, attrs.graph, function(data){\r\n                    scope.elements = Object.keys(data);\r\n                    scope.selected = scope.elements[0];\r\n                    scope.punchCardData = data[scope.selected];\r\n                    scope.$watch('selected', function(selected){\r\n                       scope.punchCardData = data[selected];\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp').directive('injectorBargraph', ['$routeParams', 'models', function ($routeParams, models) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: true,\r\n            templateUrl: 'js/directives/injector-bargraph/injector-bargraph.html',\r\n            link: function (scope, element, attrs, ngModel) {\r\n\r\n                var modelName = $routeParams.schema;\r\n                models.getModelConfig(modelName, function (config) {\r\n                    models.getGraph(modelName, attrs.graph, function (data) {\r\n\r\n                        var graph = {};\r\n                        for(var i in config.graphs){\r\n                            var g = config.graphs[i];\r\n\r\n                            if(g.title == attrs.graph){\r\n                                graph = g;\r\n                            }\r\n                        }\r\n\r\n                        scope.elements = Object.keys(data);\r\n                        scope.selected = scope.elements[0];\r\n\r\n                        if(graph.groupMode == \"series\"){\r\n                            scope.selectEnabled = false;\r\n\r\n                        } else if(graph.groupMode == \"select\"){\r\n                            scope.selectEnabled = true;\r\n                        } else{\r\n                            console.error(\"Invalid configuration at bargraph group Mode:\", graph.groupMode);\r\n                        }\r\n\r\n                        if (scope.selectEnabled === true) {\r\n                            //GroupedBy with select2 !!\r\n                            scope.barsData = [\r\n                                {\r\n                                    key: scope.selected,\r\n                                    values: data[scope.selected]\r\n                                }\r\n                            ];\r\n\r\n                            scope.$watch('selected', function (selected) {\r\n                                if (scope.selectEnabled === true) {\r\n                                    scope.barsData = [\r\n                                        {\r\n                                            key: selected,\r\n                                            values: data[selected]\r\n                                        }\r\n                                    ];\r\n                                }\r\n                            });\r\n\r\n                        } else {\r\n                            //Grouped by in legend !\r\n                            scope.barsData = [];\r\n                            for (var key in data) {\r\n                                scope.barsData.push(\r\n                                    {\r\n                                        key: key,\r\n                                        values: data[key]\r\n                                    });\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp').directive('modelButtons', ['$routeParams', '$http', '$q', '$route', 'models', '$location', function ($routeParams, $http, $q, $route, models, $location) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: false, //Use the parent scope, in this case the modelController (this directive always will be loaded in the model page!)\r\n            //If not, we should set scope to true and implement here all the functions\r\n            templateUrl: 'js/directives/model-buttons/model-buttons.html',\r\n            link: function (scope, element, attrs, ngModel) {\r\n                scope.performAction = function (action) {\r\n                    if (action.type && action.type == \"form\") {\r\n                        //post as form\r\n                        models.postAsForm(action.path, action.data, 'post');\r\n                    } else if (action.type && action.type == \"location\") {\r\n                        $location.path(action.location);\r\n                    } else {\r\n                        var req = {\r\n                            method: action.method,\r\n                            url: action.path,\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            data: action.data\r\n                        };\r\n\r\n                        $http(req);\r\n                    }\r\n                };\r\n\r\n                function exportElements() {\r\n                    var checked = scope.elements.filter(function (x) {\r\n                        return x.checked;\r\n                    });\r\n\r\n                    if (checked && checked.length > 0) {\r\n                        var query = {$or: []};\r\n                        angular.forEach(checked, function (elem) {\r\n                            query.$or.push({_id: elem._id});//We search by id\r\n                        });\r\n                        return query;\r\n                    } else {\r\n                        return scope.query;\r\n                    }\r\n                }\r\n\r\n                scope.export = function exportModels(format) {\r\n                    models.export(scope.schema, format, exportElements(), function (doc) {\r\n                    });\r\n                };\r\n\r\n\r\n                scope.import = function importModels(format) {\r\n                    console.log(\"IMPORT\", format, scope.schema);\r\n                    var file = \"\";\r\n                    models.import(scope.schema, format, file, function (doc) {\r\n                    });\r\n                };\r\n\r\n                scope.enableDelete = function () {\r\n                    if (!scope.elements) {\r\n                        return false;\r\n                    }\r\n                    var checkedValues = scope.elements.filter(function (val) {\r\n                        return val.checked;\r\n                    });\r\n\r\n                    return checkedValues.length > 0;\r\n                };\r\n\r\n                scope.removeSelected = function removeSelected() {\r\n                    var checkedValues = scope.elements.filter(function (val) {\r\n                        return val.checked;\r\n                    });\r\n\r\n                    if (checkedValues.length > 0) {\r\n                        scope.promptAlert(function (del) {\r\n                            if (del) {\r\n                                var deletions = [];\r\n                                angular.forEach(checkedValues, function (element) {\r\n                                    var deferred = $q.defer();\r\n                                    deletions.push(deferred.promise);\r\n\r\n                                    models.getModelConfig(scope.schema, function (cfg) {\r\n                                        var shard;\r\n\r\n                                        if (cfg.shard && cfg.shard.shardKey) {\r\n                                            shard = element[cfg.shard.shardKey];\r\n                                        }\r\n\r\n                                        if (scope.isDisabled(element)) {\r\n                                            models.removeDocumentByMongoId(scope.schema, element._id, shard, function (doc) {\r\n                                                deferred.resolve();\r\n                                            });\r\n                                        } else {\r\n                                            models.removeDocument(scope.schema, scope.id(element), shard, function (doc) {\r\n                                                deferred.resolve();\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                });\r\n                                $q.all(deletions).then(function () {\r\n                                    $route.reload();\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .directive('searchInModel', ['$routeParams', 'models', 'common', 'search', function ($routeParams, models, common, search) {\r\n            return {\r\n                restrict: 'AE',\r\n                scope: false,\r\n                templateUrl: 'js/directives/search-model/search-model.html',\r\n                link: function (scope, element, attrs, ngModel) {\r\n                    scope.searches = [];\r\n                    scope.models = models;\r\n                    var modelName = $routeParams.schema;\r\n\r\n\r\n                    scope.buildPath = function (field, schema) {\r\n                        var sc = models.getFieldFromSchema(field, schema);\r\n                        var title;\r\n                        if (sc && sc.title) {\r\n                            var i = field.lastIndexOf(\".\");\r\n                            if (i > -1 && sc.title.indexOf(\"<i\") == -1) {//TODO: ÑAPA DE LAS GUAPAS, ESTO HAY QUE CAMBIARLO\r\n                                title = common.prettifyTitle(field.substring(0, i) + '.' + sc.title);\r\n                            } else {\r\n                                title = sc.title;\r\n                            }\r\n\r\n                        } else {\r\n                            title = common.prettifyTitle(field);\r\n                        }\r\n\r\n                        return title;\r\n                    };\r\n\r\n                    scope.updateSearch = function (elemSearch, field, noSearch) {\r\n                        var index;\r\n                        if (elemSearch.field) {\r\n                            index = scope.availableFields.indexOf(elemSearch.field);\r\n                            if (index == -1) {\r\n                                scope.availableFields.push(elemSearch.field);\r\n                            }\r\n                        }\r\n\r\n                        var fieldFromSchema = models.getFieldFromSchema(field, scope.schema);\r\n\r\n                        elemSearch.title = fieldFromSchema.title;\r\n                        elemSearch.field = field;\r\n                        elemSearch.placeholder = {modelName: modelName, field: elemSearch.field};\r\n                        elemSearch.ref = (fieldFromSchema.ref && !fieldFromSchema.denormalize) ? fieldFromSchema.ref : undefined;\r\n\r\n                        index = scope.availableFields.indexOf(field);\r\n                        if (index > -1) {\r\n                            scope.availableFields.splice(index, 1);\r\n                        }\r\n\r\n                        if (!noSearch) {\r\n                            scope.search();\r\n                        }\r\n                    };\r\n\r\n                    scope.addSearch = function (field) {\r\n                        var s = {};\r\n                        field = field || scope.availableFields[0];\r\n\r\n                        s.clear = function () {\r\n                            s.value = \"\";\r\n                            scope.search();\r\n                        };\r\n\r\n                        s.remove = function () {\r\n\r\n                            var index = scope.searches.indexOf(s);\r\n                            if (index > -1) {\r\n                                scope.searches.splice(index, 1);\r\n                            }\r\n\r\n                            index = scope.availableFields.indexOf(s.field);\r\n                            if (index == -1) {\r\n                                scope.availableFields.push(s.field);\r\n                            }\r\n                            scope.search();\r\n                        };\r\n\r\n                        scope.updateSearch(s, field, true);\r\n                        scope.searches.push(s);\r\n                    };\r\n\r\n                    models.getModelSchema(modelName, function (schema) {\r\n                        if (schema) {\r\n                            scope.schema = schema;\r\n                            scope.allFields = common.getAllSchemaFields(schema);\r\n                            scope.availableFields = scope.allFields.filter(function (val) {\r\n                                var f = models.getFieldFromSchema(val, schema);\r\n                                return (f && f.format != \"image\" && f.format != \"mixed\");\r\n                            });\r\n                        }\r\n                    });\r\n                    models.getModelConfig(modelName, function (config) {\r\n                        scope.addSearch(config.displayField);\r\n                    });\r\n\r\n                    /*scope.$on('$routeChangeSuccess', function (event, current, previous) {\r\n                     searchFunc(current.params.schema);\r\n                     });*/\r\n\r\n                    //scope.newSearch = function () {\r\n                    //    scope.addSearch(scope.availableFields[0]);\r\n                    //};\r\n\r\n                    /*** MONGO DATE PARSING **/\r\n                    function parseMongoDate(txt) {\r\n                        var result = {};\r\n                        var dt = parseDateTimeRange(txt);\r\n\r\n                        if(dt.err) {\r\n                            return dt;\r\n                        }\r\n\r\n                        if(!dt.end) {\r\n                            //CASE 0 1/12/15 convert year\r\n                            updateYear(dt.start);\r\n                            var d = dt.start;\r\n\r\n                            if(d.day == undefined && d.month != undefined && d.year != undefined && d.hour == undefined) {\r\n                                //CASE 4 12/2015 -> gte 1/12/2015 0:00:00 .. lt 1/1/2016 0:00:00\r\n                                result[\"$gte\"] = new Date(d.year,d.month-1,1,0,0,0,0);\r\n                                result[\"$lt\"]  = new Date(d.year,d.month,1,0,0,0,0);\r\n                            } else if(d.day != undefined && d.month != undefined && d.year != undefined && d.hour == undefined) {\r\n                                //CASE 1 1/12/2015 -> 1/12/2015 0:00:00 .. lt 2/12/2015 0:00:00\r\n                                result[\"$gte\"] = new Date(d.year,d.month-1,d.day,0,0,0,0);\r\n                                result[\"$lt\"] =  new Date(d.year,d.month-1,d.day+1,0,0,0,0);\r\n                            } else if(d.day != undefined && d.month != undefined && d.year != undefined && d.hour != undefined) {\r\n                                //CASE 2 1/12/2015 HH:MM -> gte 1/12/2015 HH:MM:00 .. lte 1/12/2015 HH:MM:59\r\n                                //CASE 3 1/12/2015 HH:MM:SS\r\n                                var sec = 0;\r\n                                if(!isNaN(d.second)) {\r\n                                    sec = d.second;\r\n                                }\r\n                                result[\"$gte\"] = new Date(d.year,d.month-1,d.day,d.hour,d.minute,sec,0);\r\n                                result[\"$lte\"] = new Date(d.year,d.month-1,d.day,d.hour,d.minute,sec,999);\r\n                            } else {\r\n                                result = {err: \"format invalid\"};\r\n                            }\r\n                        } else {\r\n                            //CASE 0 1/12/15 convert year\r\n                            updateYear(dt.start);\r\n                            updateYear(dt.end);\r\n                            var d1 = dt.start;\r\n                            var d2 = dt.end;\r\n                            var sec1 = 0;\r\n                            var sec2 = 0;\r\n\r\n                            if(d1.second != undefined) {\r\n                                sec1 = d1.second;\r\n                            }\r\n\r\n                            if(d2.second != undefined) {\r\n                                sec2 = d2.second;\r\n                            }\r\n\r\n                            if(d1.hour == undefined && d2.hour == undefined && d1.year != undefined && d2.year != undefined) {\r\n                                // 1/2/90 - 2/2/90\r\n                                result[\"$gte\"] = new Date(d1.year,d1.month-1,d1.day,0,0,0,0);\r\n                                result[\"$lte\"] = new Date(d2.year,d2.month-1,d2.day,23,59,59,999);\r\n                            } else if(d1.hour != undefined && d2.hour != undefined && d1.year != undefined && d2.year != undefined) {\r\n                                // 1/2/90 H:M - 2/2/90 H:M\r\n                                result[\"$gte\"] = new Date(d1.year,d1.month-1,d1.day,d1.hour,d1.minute,sec1,0);\r\n                                result[\"$lte\"] = new Date(d2.year,d2.month-1,d2.day,d2.hour,d2.minute,sec2,999);\r\n                            } else if(d1.hour != undefined && d2.hour != undefined && d1.year != undefined && d2.year == undefined) {\r\n                                // 1/2/90 H:M - H:M\r\n                                result[\"$gte\"] = new Date(d1.year,d1.month-1,d1.day,d1.hour,d1.minute,sec1,0);\r\n                                result[\"$lte\"] = new Date(d1.year,d1.month-1,d1.day,d2.hour,d2.minute,sec2,999);\r\n                            } else if(d1.hour != undefined && d2.hour == undefined && d1.year != undefined && d2.year != undefined) {\r\n                                // 1/2/90 H:M - 2/2/90\r\n                                result[\"$gte\"] = new Date(d1.year,d1.month-1,d1.day,d1.hour,d1.minute,sec1,0);\r\n                                result[\"$lte\"] = new Date(d2.year,d2.month-1,d2.day,d1.hour,d1.minute,sec1,999);\r\n                            } else {\r\n                                result = {err: \"format invalid\"};\r\n                            }\r\n                        }\r\n                        debugParse(result);\r\n                        return result;\r\n                    }\r\n\r\n                    function updateYear(dt) {\r\n                        var year = Number(dt.year);\r\n                        if(year<100) {\r\n                            if(year<46) {\r\n                                year = 2000 + year;\r\n                            } else {\r\n                                year = 1900 + year;\r\n                            }\r\n                            dt.year = String(year);\r\n                        }\r\n                    }\r\n\r\n                    function parseDateTimeRange(txt) {\r\n                        var pieces = txt.split(\"-\");\r\n                        switch(pieces.length) {\r\n                            case 1:\r\n                                var d1 = parseDateTime(pieces[0].trim());\r\n                                if(d1) {\r\n                                    return {start: d1};\r\n                                } else {\r\n                                    return {err:\"format invalid\"};\r\n                                }\r\n                            case 2:\r\n                                var d1 = parseDateTime(pieces[0].trim());\r\n                                var d2 = parseDateTime(pieces[1].trim());\r\n                                if(d1 && d2) {\r\n                                    return {start: d1, end: d2};\r\n                                } else {\r\n                                    return {err:\"format invalid\"};\r\n                                }\r\n                            default:\r\n                                return {err:\"format invalid\"};\r\n                        }\r\n                    }\r\n\r\n                    function parseDateTime(dt) {\r\n                        var pieces = dt.split(\" \");\r\n                        switch(pieces.length) {\r\n                            case 1:\r\n                                return parseDateOrTime(pieces[0].trim());\r\n                            case 2:\r\n                                var dt1 = parseDateOrTime(pieces[0].trim());\r\n                                var dt2 = parseDateOrTime(pieces[1].trim());\r\n                                if(!dt1 || !dt2) {\r\n                                    return null;\r\n                                } else {\r\n                                    dt1.hour = dt2.hour;\r\n                                    dt1.minute = dt2.minute;\r\n                                    dt1.second = dt2.second;\r\n                                    return dt1;\r\n                                }\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    }\r\n\r\n                    function parseDateOrTime(dt) {\r\n                        if(dt.indexOf(':')!=-1) {\r\n                            return parseTime(dt);\r\n                        } else if(dt.indexOf('/')!=-1) {\r\n                            return parseDate(dt);\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n\r\n                    function Num(txt) {\r\n                        if(txt==undefined) return undefined;\r\n                        return Number(txt);\r\n                    }\r\n\r\n                    function parseTime(t) {\r\n                        var regex = /^(\\d?\\d):(\\d\\d)(:(\\d\\d))?$/g\r\n                        var result = regex.exec(t);\r\n                        if(result) {\r\n                            return {hour: Num(result[1]) , minute: Num(result[2]), second: Num(result[4])};\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n\r\n                    function parseDate(d) {\r\n                        var regex = /^((\\d?\\d)\\/)?(\\d?\\d)\\/(\\d{2,4})$/g\r\n                        var result = regex.exec(d);\r\n                        if(result) {\r\n                            var o = {day: Num(result[2]) , month: Num(result[3]), year: Num(result[4])};\r\n                            return o;\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n\r\n                    function debugParse(x) {\r\n                        if(x[\"$gte\"]) {\r\n                            console.log(\"GTE\", x[\"$gte\"].toLocaleString(\"es-ES\"));\r\n                        }\r\n                        if(x[\"$gt\"]) {\r\n                            console.log(\"GT \", x[\"$gt\"].toLocaleString(\"es-ES\"));\r\n                        }\r\n                        if(x[\"$lte\"]) {\r\n                            console.log(\"LTE\", x[\"$lte\"].toLocaleString(\"es-ES\"));\r\n                        }\r\n                        if(x[\"$lt\"]) {\r\n                            console.log(\"LT \", x[\"$lt\"].toLocaleString(\"es-ES\"));\r\n                        }\r\n                        console.log(\"----------------------------------------\");\r\n                    }\r\n\r\n                    /** END MONGO DATE PARSING ***/\r\n\r\n                    scope.search = function () {\r\n                        var query = {};\r\n\r\n                        models.getModelSchema(modelName, function (schema) {\r\n                            angular.forEach(scope.searches, function (s) {\r\n                                var singleQuery = {};\r\n                                if (s.value) {\r\n                                    var sfield = models.getFieldFromSchema(s.field, schema);\r\n                                    if (sfield) {\r\n                                        if (sfield.type == \"string\" && !sfield.format && !sfield.ref) {\r\n                                            if (s.value !== \"\") {\r\n                                                singleQuery[s.field] = {$regex: s.value, $options: 'i'};\r\n                                            }\r\n                                        } else if (sfield.type == \"string\" && sfield.format == \"date\") {\r\n                                            var q = parseMongoDate(s.value);\r\n\r\n                                            if (s.value !== \"\") {\r\n                                                if(q.err == undefined) {\r\n                                                    singleQuery[s.field] = q;\r\n                                                } else {\r\n                                                    alert(\"Format invalid in field \"+s.field);\r\n                                                }\r\n                                            }\r\n                                        } else if (sfield.ref && !sfield.denormalize) {\r\n                                            singleQuery[s.field] = s.value;\r\n                                            //References may be we should load before some useful information for querying references\r\n                                        } else if (sfield.ref && sfield.denormalize) {\r\n                                            singleQuery[s.field] = {$regex: s.value, $options: 'i'};\r\n                                        } else {\r\n                                            singleQuery[s.field] = s.value;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                angular.extend(query, singleQuery);\r\n                            });\r\n                        });\r\n\r\n                        search.setQuery(query);\r\n                        search.setSkip(0);\r\n                        scope.$parent.search();\r\n\r\n                    };\r\n                }\r\n            };\r\n        }])\r\n        .directive(\"searchRefInModel\", ['models', 'common', function (models, common) {\r\n            return {\r\n                restrict: 'AE',\r\n                scope: false,\r\n                templateUrl: 'js/directives/search-model/search-ref-model.html',\r\n                link: function (scope, element, attrs, ngModel) {\r\n                    scope.elemsearch = scope.$eval(attrs.elemsearch);\r\n                    var ref = scope.elemsearch.ref;\r\n\r\n                    if (!element.select) {\r\n                        return;\r\n                    }\r\n\r\n                    var displayField = \"\";\r\n                    var idSelect = \"\";\r\n\r\n                    function getDocumentById(modelId) {\r\n                        return function (query, skip) {\r\n                            return models.getModel(ref, function (m) {\r\n                                var config = m.config;\r\n                                var elem = \"\";\r\n                                if (modelId instanceof Object) {\r\n                                    elem = modelId[config.id];\r\n                                } else {\r\n                                    elem = modelId;\r\n                                }\r\n                                models.getDocument(ref, elem, function (doc) {\r\n                                    displayField = config.displayField;\r\n                                    idSelect = config.id;\r\n\r\n                                    var q = {};\r\n                                    q.query = {};\r\n                                    var regex = query.search;\r\n                                    q.query.$or = [];\r\n\r\n                                    var forDisplay = {};\r\n                                    forDisplay[displayField] = {$regex: regex, $options: 'i'};\r\n                                    q.query.$or.push(forDisplay);\r\n\r\n\r\n                                    if (config.id != \"_id\" && m.schema[config.id] && m.schema[config.id].type == \"string\") {\r\n                                        var forID = {};\r\n                                        forID[idSelect] = {$regex: regex, $options: 'i'};\r\n                                        q.query.$or.push(forID);\r\n                                    }\r\n\r\n                                    q.limit = 20;\r\n                                    q.skip = skip;\r\n\r\n                                    //SHARDING\r\n                                    if (models.getShard(ref)) {\r\n                                        q[models.getShard(ref).key] = models.getShard(ref).value;\r\n                                    }\r\n\r\n                                    models.search(ref, q, function (response, count) {\r\n                                        if (skip) {\r\n                                            scope.searchRes = scope.searchRes.concat(response);\r\n                                        } else {\r\n                                            scope.searchRes = response;\r\n                                        }\r\n\r\n                                        if (doc) {\r\n                                            var present = scope.searchRes.some(function (element) {\r\n                                                return element[config.id] == doc[config.id];\r\n                                            });\r\n\r\n                                            if (!present) {\r\n                                                scope.searchRes.splice(0, 0, doc);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                });\r\n                            });\r\n                        };\r\n                    }\r\n\r\n                    var elements = getDocumentById(scope.$eval(attrs.ngModel));\r\n\r\n                    scope.disabled = false;\r\n                    scope.searchEnabled = true;\r\n                    scope.searchRes = [];\r\n                    scope.search = elements;\r\n\r\n                    scope.printSelectedElement = function (document) {\r\n                        if (document) {\r\n                            var f = common.getField(displayField, document);\r\n                            if (f && f !== \"\" && f.length > 0) {\r\n                                return f + \" <\" + document[idSelect] + \">\";\r\n                            } else {\r\n                                return \"No display field. ID: <\" + document[idSelect] + \">\";\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    scope.selectDisplayField = function (document) {\r\n                        if (document) {\r\n                            var f = common.getField(displayField, document);\r\n                            if (f && f !== \"\" && f.length > 0) {\r\n                                return f;\r\n                            } else {\r\n                                return \"<empty>\";\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    scope.selectIdField = function (document) {\r\n                        if (document !== undefined) {\r\n                            return document[idSelect] || \"No ID\";\r\n                        }\r\n                    };\r\n\r\n                    scope.$on('refreshSelect2' + ref, function () {\r\n                        console.log(\"REFRESH SELECT2\");\r\n                        elements();\r\n                    });\r\n\r\n                    element.find('ul').bind('scroll', function () {\r\n                        var raw = arguments[0].target;\r\n                        if (raw.scrollTop + raw.offsetHeight > raw.scrollHeight) {\r\n                            elements(scope.$select, (raw.children[0].children.length - 2));\r\n                        }\r\n                    });\r\n\r\n                }\r\n            };\r\n        }]);\r\n}());\r\n\n(function () {\n    'use strict';\n    angular.module('injectorApp').directive('ellipsis', function () {\n        return {\n            restrict: 'A',\n            scope: true,\n            link: function (scope, element, attrs, ngModel) {\n                var width = element.width();\n                element.css(\"width\", width);\n                element.css(\"text-overflow\", 'ellipsis');\n                element.css(\"overflow\", 'hidden');\n                element.css(\"white-space\", 'nowrap');\n                // Do calculation\n                //var model = scope.$eval(attrs.ngModel);\n                //console.log(\"Model\", model);\n                //console.log(\"Model > Length\", model.width());\n            }\n        };\n    });\n}());\n(function () {\n    'use strict';\n    angular.module('injectorApp')\n        .directive(\n            \"mAppLoading\",\n            ['$animate', function ($animate) {\n                // Return the directive configuration.\n                return ({\n                    link: link,\n                    restrict: \"C\"\n                });\n                // I bind the JavaScript events to the scope.\n                function link(scope, element, attributes) {\n                    // Due to the way AngularJS prevents animation during the bootstrap\n                    // of the application, we can't animate the top-level container; but,\n                    // since we added \"ngAnimateChildren\", we can animated the inner\n                    // container during this phase.\n                    // --\n                    // NOTE: Am using .eq(1) so that we don't animate the Style block.\n                    $animate.leave(element.children().eq(1)).then(\n                        function cleanupAfterAnimation() {\n                            // Remove the root directive element.\n                            element.remove();\n                            // Clear the closed-over variable references.\n                            scope = element = attributes = null;\n                        }\n                    );\n                }\n            }]\n        );\n}());\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .controller('CreateController', ['$scope', '$http', '$location', '$routeParams', 'models', '$controller', function ($scope, $http, $location, $routeParams, models, $controller) {\r\n            var modelName = $routeParams.schema;\r\n            $scope.action = \"create\";\r\n            models.getModel(modelName, function (m) {\r\n                if (!m.config.post) {\r\n                    $location.path('/model/' + modelName);\r\n                } else {\r\n                    $scope.model = {};\r\n                    var m_copy = angular.copy(m);\r\n                    $scope.m = m;\r\n                    $scope.m_copy = m_copy;\r\n                    $scope.action = \"create\";\r\n                    $controller('FormController', {$scope: $scope}); //This works\r\n                }\r\n            });\r\n        }]);\r\n}());\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .controller('GraphsController', ['$scope', '$routeParams', '$sce', '$compile', 'models', function ($scope, $routeParams, $sce, $compile, models) {\r\n        $scope.schema = $routeParams.schema;\r\n\r\n        models.getModelConfig($scope.schema, function (config) {\r\n            $scope.config = config;\r\n            $scope.graphs = config.graphs;\r\n        });\r\n\r\n        $scope.getTag = function (graph) {\r\n            var tag = graph.type;\r\n            return '<injector-'+ tag +' graph=\"' + graph.title + '\"></injector-'+ tag +'>';\r\n        };\r\n    }]);\r\n}());\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .controller('UpdateController', ['$scope', '$http', '$routeParams', '$location', 'models', '$controller', function ($scope, $http, $routeParams, $location, models, $controller) {\r\n            var modelName = $routeParams.schema;\r\n            var id = $routeParams.id;\r\n            var shard = $routeParams.shard;\r\n\r\n            models.getModel(modelName, function (m) {\r\n                models.getDocument(modelName, id, shard, function (document) {\r\n                    $scope.prune(document);\r\n                    $scope.action = \"update\";\r\n                    $scope.model = document || {};\r\n                    var m_copy = angular.copy(m);\r\n                    $scope.m = m;\r\n                    $scope.m_copy = m_copy;\r\n                    $controller('FormController', {$scope: $scope}); //This works\r\n                });\r\n            });\r\n\r\n            //We made this in client because is an specific management of angular-schema-form\r\n            $scope.prune = function (document) {\r\n                for (var key in document) {\r\n                    var elem = document[key];\r\n                    if (elem && (typeof elem === 'object' || elem instanceof Array)) {\r\n                        $scope.prune(elem);\r\n                    }\r\n                    if (elem == null) {//Angular schema form does not allow null elements. Undefined is better\r\n                        document[key] = undefined;\r\n                    }\r\n                }\r\n            };\r\n        }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .controller('FormController', ['$rootScope', '$scope', '$http', '$location', '$routeParams', '$anchorScroll', '$timeout', '$modal', 'models', 'configs', 'dependsOn', 'common', '$window', 'flash', '$translate', function ($rootScope, $scope, $http, $location, $routeParams, $anchorScroll, $timeout, $modal, models, configs, dependsOn, common, $window, flash, $translate) {\r\n            var modelName = $routeParams.schema;\r\n            var id = $routeParams.id;\r\n            var modified = false;\r\n\r\n            $scope.buttonsPosition = configs.backoffice.buttonsPosition || 'bottom';\r\n\r\n            function walkThroughSchema(schema) {\r\n                var keys = Object.keys(schema);\r\n                for (var i in keys) {\r\n                    if(schema[keys[i]]) {\r\n                        if (schema[keys[i]].editOnCreate) {\r\n                            var action = $scope.action.toLowerCase();\r\n                            schema[keys[i]].readonly = !(action === \"create\");\r\n                        }\r\n\r\n                        if (schema[keys[i]].i18nTitle) {\r\n                            schema[keys[i]].title = $translate.instant(schema[keys[i]].i18nTitle);\r\n                        }\r\n\r\n                        var type = schema[keys[i]].type;\r\n                        if ((type === 'array' || type === 'object') && schema[keys[i]].properties) {\r\n                            walkThroughSchema(schema[keys[i]].properties);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            $scope.m = angular.copy($scope.m_copy);\r\n            walkThroughSchema($scope.m.schema);\r\n\r\n            $scope.schema = {\r\n                \"type\": \"object\",\r\n                \"title\": modelName,\r\n                \"action\": $scope.action,\r\n                \"properties\": $scope.m.schema\r\n            };\r\n\r\n            $scope.form = common.processForm($scope.m.config.form);\r\n\r\n            if ($scope.action.toLowerCase() == \"create\" && models.getShard(modelName) && models.getShard(modelName).value) {\r\n                $scope.model[models.getShard(modelName).key] = models.getShard(modelName).value;\r\n            }\r\n\r\n            $rootScope.$on('shardChangeEvent', function () {\r\n                if ($scope.action.toLowerCase() == \"create\" && models.getShard(modelName) && models.getShard(modelName).value) {\r\n                    $scope.model[models.getShard(modelName).key] = models.getShard(modelName).value;\r\n                }\r\n            });\r\n\r\n\r\n            dependsOn.apply($scope, modelName, $scope.model);\r\n\r\n            $timeout(function () {\r\n                $scope.$watch('model', function (newVal, oldVal) {\r\n                    if (!angular.equals(newVal, oldVal)) {\r\n                        modified = true;\r\n                    }\r\n                }, true);\r\n            }, 0);\r\n\r\n            $scope.schemaHREF = function () {\r\n                $location.path(\"/model/\" + modelName);\r\n                $location.hash('');\r\n            };\r\n\r\n            $scope.submitForm = function (form, model, isApply) {\r\n                $scope.$broadcast('schemaFormValidate');\r\n                if (form.$valid) {\r\n                    if ($scope.action.toLowerCase() == 'update' && $scope.m.config.put) {\r\n                        models.putDocument(modelName, id, model, function (response) {\r\n                            if (response.status == '200') {\r\n                                modified = false;\r\n                                flash.success(\"Done\", \"Document saved successfully\");\r\n                                $scope.$broadcast('postedDocument', response.data);\r\n                                $scope.$broadcast('puttedDocument', response.data);\r\n                                if (!isApply) {\r\n                                    $location.path('/model/' + modelName);\r\n                                    $location.hash('');\r\n                                }\r\n                            }\r\n                        });\r\n                    } else if ($scope.action.toLowerCase() == 'create' && $scope.m.config.post) {\r\n                        models.postDocument(modelName, model, function (response) {\r\n                            if (response.status == '201') {\r\n                                modified = false;\r\n                                flash.success(\"Done\", \"Document saved successfully\");\r\n                                $scope.$broadcast('postedDocument', response.data);\r\n                                if (!isApply) {\r\n                                    $location.path('/model/' + modelName);\r\n                                    $location.hash('');\r\n                                } else {\r\n                                    $location.path('/model/' + modelName + '/update/' + response.data[Object.keys(response.data)[0]]);\r\n                                    $location.hash('');\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    $scope.validation = !form.$valid;\r\n                    $scope.validationErrors = form.$error;\r\n                    $location.hash('error');\r\n                    $anchorScroll.yOffset = 100;\r\n                    $anchorScroll();\r\n\r\n                }\r\n            };\r\n\r\n            $scope.cancel = function () {\r\n                $window.history.back();\r\n            };\r\n\r\n            $scope.$on('$locationChangeStart', function (event, next, current) {\r\n                if ($scope.ngForm.$valid && modified) {\r\n                    event.preventDefault();\r\n\r\n                    var modalInstance = $modal.open({\r\n                        templateUrl: 'changedDocument.html',\r\n                        controller: 'ModalChangedCtrl',\r\n                        size: 'sm',\r\n                        resolve: {\r\n                            items: function () {\r\n                                return $scope.items;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    modalInstance.result.then(function () { //CLOSE CALLBACK\r\n                        $scope.submitForm($scope.ngForm, $scope.model);\r\n                    }, function () { //DISMISS CALLBACK\r\n                        modified = false;\r\n                        var basePathLength = $location.absUrl().length - $location.url().length;\r\n                        $location.path(next.substring(basePathLength));\r\n                    });\r\n\r\n                }\r\n            });\r\n\r\n\r\n            $scope.$on('bkButton', function (event, form) {\r\n                if (form.action == 'api') {\r\n                    var http;\r\n                    var url = form.url;\r\n\r\n                    var getUrl = function (path) {\r\n                        return path.replace(/[^/]*:([^/]*)+/g, function (s, m) {\r\n                            return safeAccess($scope.model, m);\r\n                        });\r\n                    };\r\n\r\n                    url = getUrl(url);\r\n\r\n                    switch (form.method.toUpperCase()) {\r\n                        case 'GET':\r\n                            http = $http.get(url);\r\n                            break;\r\n                        case 'PUT':\r\n                            http = $http.put(url, $scope.model);\r\n                            break;\r\n                        case 'POST':\r\n                            var body = {};\r\n                            if (form.body) {\r\n                                angular.extend(body, form.body);\r\n                            } else {\r\n                                body = $scope.model;\r\n                            }\r\n                            http = $http.post(url, body);\r\n                            break;\r\n                        case 'DELETE':\r\n                            http = $http.delete(url);\r\n                            break;\r\n                        default :\r\n                            throw new Error('Method not configured properly');\r\n                    }\r\n                    if (http) {\r\n                        http.success(function (res) {\r\n                            angular.forEach(Object.keys(res), function (key) {\r\n                                $scope.model[key] = res[key];\r\n                            });\r\n                        }).error(function (err) {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n                } else if (form.action == 'function') {\r\n                    window[form.func]($scope.model, $scope.m.schema);\r\n                }\r\n            });\r\n\r\n            $rootScope.$on('$translateChangeSuccess', function () {\r\n                walkThroughSchema($scope.schema.properties);\r\n                $scope.$broadcast('schemaFormRedraw');\r\n            });\r\n        }])\r\n        // It is not the same as the $modal service used above.\r\n        .controller('ModalChangedCtrl', ['$scope', '$modalInstance', 'items', function ($scope, $modalInstance, items) {\r\n\r\n            $scope.ok = function () {\r\n                $modalInstance.close('ok');\r\n            };\r\n\r\n            $scope.cancel = function () {\r\n                $modalInstance.dismiss('cancel');\r\n            };\r\n        }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n        .controller('LoginController', ['$http', '$scope', '$document', '$location', 'loginProvider', function ($http, $scope, $document, $location, loginProvider) {\r\n        $scope.update = function (user) {\r\n            loginProvider.login(user, function (res) {\r\n                if (!res) {\r\n                    $scope.loginError = 'incorrect login';\r\n                } else{\r\n                    $location.path('/');\r\n                }\r\n            });\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n\r\n        .filter('encodeURIComponent', function() {\r\n            return window.encodeURIComponent;\r\n        })\r\n\r\n        .controller('MainController', ['$rootScope', '$scope', '$q', 'loginProvider', 'models', 'common', function ($rootScope, $scope, $q, loginProvider, models, common) {\r\n            $scope.postLoginFuncs = [];\r\n            $scope.postLoginFuncs.push(function(){\r\n                models.getModels(function (m) {\r\n                    $scope.schemas = {};\r\n                    angular.forEach(m, function (schema) {\r\n                        models.getModelConfig(schema, function (config) {\r\n                            $scope.schemas[schema] = config;\r\n\r\n                            loginProvider.getUser(function(){}); //Force first login\r\n                            if (config.isSingle) {\r\n                                models.getSingleModel(schema, function (doc) {\r\n                                    if (!doc) {\r\n                                        $scope.schemas[schema].redirectTo = \"#/model/\" + schema + \"/new\";\r\n                                    } else {\r\n                                        $scope.schemas[schema].redirectTo = \"#/model/\" + schema + \"/update/\" + doc[config.id];\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n\r\n\r\n            $scope.pretty = function pretty(str) {\r\n                return common.prettifyTitle(str);\r\n            };\r\n\r\n            $scope.schemaHREF = function (name, conf) {\r\n                return conf.redirectTo || \"#/model/\" + name;\r\n            };\r\n\r\n            angular.element('body').ready(function () {\r\n                $rootScope.$broadcast('bodyReady', 'MainController');\r\n            });\r\n\r\n            $rootScope.$on('login', function (event, args) {\r\n                angular.forEach($scope.postLoginFuncs, function(v){\r\n                    v();\r\n                });\r\n                $scope.postLoginFuncs = [];\r\n            });\r\n\r\n            $rootScope.$on('logout', function (event, args) {\r\n            });\r\n    }]);\r\n}());\r\n\r\n\r\n\n(function () {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n\r\n        .controller('ModelController', ['$scope', '$http', '$route', '$routeParams', '$modal', '$location', 'common', 'models', 'flash', 'configs', 'search', function ($scope, $http, $route, $routeParams, $modal, $location, common, models, flash, configs, search) {\r\n            var defaultItemsPerPage = 20;\r\n            $scope.flash = flash;\r\n            $scope.common = common;\r\n            $scope.removeDisabled = 'disabled';\r\n\r\n            $scope.maxSize = 10;\r\n            $scope.schema = $routeParams.schema;\r\n            $scope.create = false;\r\n            $scope.checkedGroupIds = {};\r\n            search.clearQuery();\r\n\r\n            $scope.$watch(\"removeAll\", function (value) {\r\n                if (value !== undefined) {\r\n                    for (var i in $scope.elements) {\r\n                        $scope.elements[i].checked = value;\r\n                    }\r\n                }\r\n            });\r\n\r\n            models.getModel($scope.schema, function (model) {\r\n                $scope.config = model.config;\r\n                $scope.schemaForm = model.schema;\r\n\r\n                if (model.config.isSingle) { //In single documents, this page / controller should not appear anymore !\r\n                    $location.path('/');   //Redirect to home\r\n                    return;\r\n                }\r\n\r\n                //Build the array with all the displayable elements\r\n                $scope.config.allDisplayFields = [];\r\n                $scope.config.allDisplayFields.push($scope.config.displayField);\r\n                if ($scope.config.extraDisplayFields) {\r\n                    $scope.config.allDisplayFields = $scope.config.allDisplayFields.concat($scope.config.extraDisplayFields);\r\n                }\r\n\r\n                $scope.search = function (skip) {\r\n                    if (skip !== undefined) {\r\n                        search.setSkip(skip);\r\n                    }\r\n\r\n                    search.search($scope.schema, function (elements, count, err) {\r\n                        if (elements) {\r\n                            $scope.elements = elements;\r\n                        }\r\n                        $scope.totalElements = count;\r\n                    });\r\n                };\r\n\r\n                $scope.itemsPerPage = $scope.userItemsPerPage = configs.backoffice.itemsPerPage || defaultItemsPerPage;\r\n                search.setLimit($scope.itemsPerPage);\r\n                search.setSkip(0);\r\n\r\n                if(model.config.defaultSearch) {\r\n                    search.setSortBy(model.config.defaultSearch);\r\n                }\r\n\r\n                //Init elements\r\n                $scope.search();\r\n\r\n                // Init function of pageChanged\r\n                $scope.pageChanged = function () {\r\n                    $scope.itemsPerPage = $scope.userItemsPerPage;\r\n                    if ($scope.currentPage > 0 && $scope.itemsPerPage > 0) {\r\n                        var skip = (($scope.currentPage - 1) * $scope.itemsPerPage);\r\n                        search.setSkip(skip);\r\n                    } else {\r\n                        search.setSkip(0);\r\n                    }\r\n                    search.setLimit($scope.itemsPerPage);\r\n                    $scope.search();\r\n                };\r\n\r\n                $scope.id = function (element) {\r\n                    return element[$scope.config.id];\r\n                };\r\n\r\n                $scope.shard = function (element) {\r\n                    return element[$scope.config.shard.shardKey];\r\n                };\r\n\r\n                $scope.hasShard = function (element) {\r\n                    var hasShard = $scope.config.shard && $scope.config.shard.shardKey;\r\n                    return hasShard && element[$scope.config.shard.shardKey];\r\n                };\r\n\r\n                $scope.getUrl = function (element, schema) {\r\n                    var model;\r\n                    if(element.__t) {\r\n                        model = element.__t;\r\n                    } else {\r\n                        model = schema;\r\n                    }\r\n                    var url = \"#/model/\" + model + \"/update/\" + encodeURIComponent($scope.id(element));\r\n                    if ($scope.hasShard(element)) {\r\n                        url += \"/\" + encodeURIComponent($scope.shard(element));\r\n                    }\r\n                    return url;\r\n                };\r\n\r\n                $scope.isDisabled = function (element) {\r\n                    return !(element[$scope.config.id] && element[$scope.config.id] !== \"\");\r\n                };\r\n\r\n                $scope.displayCustomField = function (field, element, schema) {\r\n                    var s = common.getField(field, element);\r\n                    var sch = models.getFieldFromSchema(field, schema);\r\n                    if(sch && sch.format === 'date') {\r\n                        if(s && s !=='') {\r\n                            s = new Date(Date.parse(s)).toLocaleString();\r\n                        }\r\n                    }\r\n                    return (s === undefined || s === \"\") ? \"<empty>\" : s;\r\n                };\r\n\r\n                $scope.sortBy = function (property, asc) {\r\n                    search.addSortBy(property, asc);\r\n                    $scope.search(0);\r\n                };\r\n\r\n                $scope.getSort = function (property) {\r\n                    return search.getSort(property);\r\n                };\r\n\r\n                $scope.$on('shardChangeEvent', function (event, data) {\r\n                    $scope.search(0);\r\n                });\r\n            });\r\n\r\n            $scope.promptAlert = function (cb) {\r\n                var del;\r\n                if (del) {\r\n                    cb(del);\r\n                }\r\n                var modalInstance = $modal.open({\r\n                    templateUrl: 'myModalContent.html',\r\n                    controller: 'ModalInstanceCtrl',\r\n                    size: 'sm',\r\n                    resolve: {\r\n                        items: function () {\r\n                            return $scope.items;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    del = true;\r\n                    cb(true);\r\n                });\r\n            };\r\n        }])\r\n\r\n        .filter('to_trusted', ['$sce', function ($sce) {\r\n            return function (text) {\r\n                if (text) {\r\n                    return $sce.trustAsHtml(text.toString());\r\n                } else {\r\n                    return text;\r\n                }\r\n            };\r\n        }])\r\n\r\n        // Please note that $modalInstance represents a modal window (instance) dependency.\r\n        // It is not the same as the $modal service used above.\r\n        .controller('ModalInstanceCtrl', ['$scope', '$modalInstance', 'items', function ($scope, $modalInstance, items) {\r\n\r\n            $scope.ok = function () {\r\n                $modalInstance.close('ok');\r\n            };\r\n\r\n            $scope.cancel = function () {\r\n                $modalInstance.dismiss('cancel');\r\n            };\r\n        }])\r\n\r\n        .controller('ImportModalInstanceCtrl', ['$scope', '$modalInstance', 'items', function ($scope, $modalInstance, items) {\r\n        }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('injectorApp')\r\n        .controller('NavbarController', ['$scope', '$location', 'loginProvider', function ($scope, $location, loginProvider) {\r\n            var navbar = function () {\r\n                loginProvider.getUser(function (user) {\r\n                    $scope.user = user;\r\n                });\r\n            };\r\n            navbar();\r\n            $scope.$on('login', function (event, data) {\r\n                navbar();\r\n            });\r\n\r\n            $scope.logout = function () {\r\n                loginProvider.logout();\r\n                $location.path('/logout');\r\n            };\r\n        }]);\r\n}());\n(function() {\r\n    'use strict';\r\n    angular.module('injectorApp')\r\n\r\n        .controller('ShardingController', ['$scope', '$routeParams', '$rootScope', 'models', 'configs', function($scope, $routeParams, $rootScope, models, configs) {\r\n            var modelName;\r\n            $scope.$on('$routeChangeSuccess', function(event, current) {\r\n                modelName = current.params.schema;\r\n\r\n                // Gets configuration from custom page \"modelName\" parameter\r\n                if(modelName == undefined) {\r\n                    modelName = current.$$route.modelName;\r\n                }\r\n\r\n                if(modelName) {\r\n                    models.getModel(modelName, function(m) {\r\n                        if(m.config.shard) {\r\n                            $scope.shardKey = m.config.shard.shardKey;\r\n                            $scope.shardKeyText = 'Select ' + $scope.shardKey + ' shard';\r\n                            $scope.shardValues = m.config.shard.shardValues;\r\n\r\n                            if(models.getShard(modelName)) {\r\n                                $scope.shardKeyText = 'Using ' + models.getShard(modelName).key + ' ' + models.getShard(\r\n                                        modelName).value;\r\n                            } else {\r\n                                if(m.config.shard.filtered) {\r\n                                    $scope.locked = true;\r\n                                    $scope.setShard($scope.shardValues[0]);\r\n                                } else {\r\n                                    $scope.locked = false;\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            $scope.shardKey = undefined;\r\n                            $scope.shardKeyText = undefined;\r\n                            $scope.shardValues = undefined;\r\n                        }\r\n                    });\r\n                } else {\r\n                    $scope.shardKey = undefined;\r\n                    $scope.shardKeyText = undefined;\r\n                    $scope.shardValues = undefined;\r\n                }\r\n            });\r\n\r\n            $scope.setShard = function(value) {\r\n                $scope.shardKeyText = 'Using ' + $scope.shardKey + ' ' + value;\r\n                models.setShard($scope.shardKey, value, modelName);\r\n\r\n                $rootScope.$broadcast('shardChangeEvent');\r\n            };\r\n\r\n            $scope.removeShard = function() {\r\n                $scope.shardKeyText = 'Select ' + $scope.shardKey + ' shard';\r\n                //models.setShard($scope.shardKey, '', modelName);\r\n                models.removeShard(modelName);\r\n                $rootScope.$broadcast('shardChangeEvent');\r\n            };\r\n            $scope.shardKey = undefined;\r\n        }]);\r\n}());\r\n\n(function () {\n    'use strict';\n\n    angular.module('injectorApp')\n        .controller('TranslateController', ['$scope', '$translate', 'configs', function ($scope, $translate, configs) {\n            //$scope.languages = $translate.getAvailableLanguageKeys();\n            $scope.languages = ['en', 'es'];\n            if (configs.backoffice.uniqueLanguage) {\n                $scope.showLanguages = false;\n                $translate.use(configs.backoffice.uniqueLanguage);\n            } else {\n                $scope.showLanguages = true;\n                $scope.use = function (lang) {\n                    $translate.use(lang);\n                };\n            }\n        }]);\n}());"]}